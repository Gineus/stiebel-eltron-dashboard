@model List<HeatPumpDataPerPeriod>
@{
    ViewData["Title"] = "Wärmepumpe";
    Layout = "/Views/Shared/_Layout.cshtml";

    var maxColor = "rgba(233, 241, 221, 1)";
    var averageColor = "rgba(140, 173, 88, 1)";
    var minColor = "rgba(132, 133, 135, 1)";
    var startColor = "rgba(233, 241, 221, 1)";
    var deltaColor = "rgba(140, 173, 88, 1)";
    var endColor = "rgba(132, 133, 135, 1)";

    var XLabelsDay = "{}";
    var XLabelsWeek = "{}";
    var XLabelsMonth = "{}";
    var XLabelsYear = "{}";
    
    var StartColorDay = "{}";    
    var EndColorDay = "{}";    
    var DeltaColorDay = "{}";
    var MinColorDay = "{}";
    var MaxColorDay = "{}";
    var AverageColorDay = "{}";

    var StartColorWeek = "{}";    
    var EndColorWeek = "{}";    
    var DeltaColorWeek = "{}";
    var MinColorWeek = "{}";
    var MaxColorWeek = "{}";
    var AverageColorWeek = "{}";

    var StartColorMonth = "{}";    
    var EndColorMonth = "{}";    
    var DeltaColorMonth = "{}";
    var MinColorMonth = "{}";
    var MaxColorMonth = "{}";
    var AverageColorMonth = "{}"; 

    var StartColorYear = "{}";    
    var EndColorYear = "{}";    
    var DeltaColorYear = "{}";
    var MinColorYear = "{}";
    var MaxColorYear = "{}";
    var AverageColorYear = "{}"; 

    var PerformanceFactorStartDay = "{}";
    var PerformanceFactorEndDay = "{}";
    var PerformanceFactorDeltaDay = "{}";
    var ReturnTemperatureMinDay = "{}";
    var ReturnTemperatureMaxDay = "{}";
    var ReturnTemperatureAverageDay = "{}";
    var InletTemperatureMinDay = "{}";
    var InletTemperatureMaxDay = "{}";
    var InletTemperatureAverageDay = "{}";
    var AntiFreezeTemperatureMinDay = "{}";
    var AntiFreezeTemperatureMaxDay = "{}";
    var AntiFreezeTemperatureAverageDay = "{}";
    var OutdoorTemperatureMinDay = "{}";
    var OutdoorTemperatureMaxDay = "{}";
    var OutdoorTemperatureAverageDay = "{}";
    var ExhaustAirTemperatureMinDay = "{}";
    var ExhaustAirTemperatureMaxDay = "{}";
    var ExhaustAirTemperatureAverageDay = "{}";
    var EvaporatorTemperatureMinDay = "{}";
    var EvaporatorTemperatureMaxDay = "{}";
    var EvaporatorTemperatureAverageDay = "{}";
    var TotalPowerConsumptionStartDay = "{}";
    var TotalPowerConsumptionEndDay = "{}";
    var TotalPowerConsumptionDeltaDay = "{}";
    var CompressorInletTemperatureMinDay = "{}";
    var CompressorInletTemperatureMaxDay = "{}";
    var CompressorInletTemperatureAverageDay = "{}";
    var IntermediateInjectionTemperatureMinDay = "{}";
    var IntermediateInjectionTemperatureMaxDay = "{}";
    var IntermediateInjectionTemperatureAverageDay = "{}";
    var HotGasTemperatureMinDay = "{}";
    var HotGasTemperatureMaxDay = "{}";
    var HotGasTemperatureAverageDay = "{}";
    var CondenserTemperatureMinDay = "{}";
    var CondenserTemperatureMaxDay = "{}";
    var CondenserTemperatureAverageDay = "{}";
    var OilSumpTemperatureMinDay = "{}";
    var OilSumpTemperatureMaxDay = "{}";
    var OilSumpTemperatureAverageDay = "{}";
    var LowPressureMinDay = "{}";
    var LowPressureMaxDay = "{}";
    var LowPressureAverageDay = "{}";
    var PressureMediumMinDay = "{}";
    var PressureMediumMaxDay = "{}";
    var PressureMediumAverageDay = "{}";
    var HighPressureMinDay = "{}";
    var HighPressureMaxDay = "{}";
    var HighPressureAverageDay = "{}";
    var WaterVolumeCurrentMinDay = "{}";
    var WaterVolumeCurrentMaxDay = "{}";
    var WaterVolumeCurrentAverageDay = "{}";
    var VoltageInverterMinDay = "{}";
    var VoltageInverterMaxDay = "{}";
    var VoltageInverterAverageDay = "{}";
    var ActualSpeedDensifierMinDay = "{}";
    var ActualSpeedDensifierMaxDay = "{}";
    var ActualSpeedDensifierAverageDay = "{}";
    var SettingSpeedCompressedMinDay = "{}";
    var SettingSpeedCompressedMaxDay = "{}";
    var SettingSpeedCompressedAverageDay = "{}";
    var FanPowerRelMinDay = "{}";
    var FanPowerRelMaxDay = "{}";
    var FanPowerRelAverageDay = "{}";
    var VaporizerHeatQuantityHeatingDayStartDay = "{}";
    var VaporizerHeatQuantityHeatingDayEndDay = "{}";
    var VaporizerHeatQuantityHeatingDayDeltaDay = "{}";
    var VaporizerHeatQuantityHeatingTotalStartDay = "{}";
    var VaporizerHeatQuantityHeatingTotalEndDay = "{}";
    var VaporizerHeatQuantityHeatingTotalDeltaDay = "{}";
    var VaporizerHeatQuantityHotWaterDayStartDay = "{}";
    var VaporizerHeatQuantityHotWaterDayEndDay = "{}";
    var VaporizerHeatQuantityHotWaterDayDeltaDay = "{}";
    var VaporizerHeatQuantityHotWaterTotalStartDay = "{}";
    var VaporizerHeatQuantityHotWaterTotalEndDay = "{}";
    var VaporizerHeatQuantityHotWaterTotalDeltaDay = "{}";
    var ReheatingStagesHeatQuantityHeatingSumStartDay = "{}";
    var ReheatingStagesHeatQuantityHeatingSumEndDay = "{}";
    var ReheatingStagesHeatQuantityHeatingSumDeltaDay = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalStartDay = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalEndDay = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalDeltaDay = "{}";
    var PowerConsumptionHeatingDayStartDay = "{}";
    var PowerConsumptionHeatingDayEndDay = "{}";
    var PowerConsumptionHeatingDayDeltaDay = "{}";
    var PowerConsumptionHeatingSumStartDay = "{}";
    var PowerConsumptionHeatingSumEndDay = "{}";
    var PowerConsumptionHeatingSumDeltaDay = "{}";
    var PowerConsumptionHotWaterDayStartDay = "{}";
    var PowerConsumptionHotWaterDayEndDay = "{}";
    var PowerConsumptionHotWaterDayDeltaDay = "{}";
    var PowerConsumptionHotWaterSumStartDay = "{}";
    var PowerConsumptionHotWaterSumEndDay = "{}";
    var PowerConsumptionHotWaterSumDeltaDay = "{}";
    var RuntimeVaporizerHeatingStartDay = "{}";
    var RuntimeVaporizerHeatingEndDay = "{}";
    var RuntimeVaporizerHeatingDeltaDay = "{}";
    var RuntimeVaporizerHotWaterStartDay = "{}";
    var RuntimeVaporizerHotWaterEndDay = "{}";
    var RuntimeVaporizerHotWaterDeltaDay = "{}";
    var RuntimeVaporizerDefrostStartDay = "{}";
    var RuntimeVaporizerDefrostEndDay = "{}";
    var RuntimeVaporizerDefrostDeltaDay = "{}";
    var ReheatingStages1StartDay = "{}";
    var ReheatingStages1EndDay = "{}";
    var ReheatingStages1DeltaDay = "{}";
    var ReheatingStages2StartDay = "{}";
    var ReheatingStages2EndDay = "{}";
    var ReheatingStages2DeltaDay = "{}";
    var DefrostTimeStartDay = "{}";
    var DefrostTimeEndDay = "{}";
    var DefrostTimeDeltaDay = "{}";
    var DefrostStartsStartDay = "{}";
    var DefrostStartsEndDay = "{}";
    var DefrostStartsDeltaDay = "{}";

    var PerformanceFactorStartWeek = "{}";
    var PerformanceFactorEndWeek = "{}";
    var PerformanceFactorDeltaWeek = "{}";
    var ReturnTemperatureMinWeek = "{}";
    var ReturnTemperatureMaxWeek = "{}";
    var ReturnTemperatureAverageWeek = "{}";
    var InletTemperatureMinWeek = "{}";
    var InletTemperatureMaxWeek = "{}";
    var InletTemperatureAverageWeek = "{}";
    var AntiFreezeTemperatureMinWeek = "{}";
    var AntiFreezeTemperatureMaxWeek = "{}";
    var AntiFreezeTemperatureAverageWeek = "{}";
    var OutdoorTemperatureMinWeek = "{}";
    var OutdoorTemperatureMaxWeek = "{}";
    var OutdoorTemperatureAverageWeek = "{}";
    var ExhaustAirTemperatureMinWeek = "{}";
    var ExhaustAirTemperatureMaxWeek = "{}";
    var ExhaustAirTemperatureAverageWeek = "{}";
    var EvaporatorTemperatureMinWeek = "{}";
    var EvaporatorTemperatureMaxWeek = "{}";
    var EvaporatorTemperatureAverageWeek = "{}";
    var TotalPowerConsumptionStartWeek = "{}";
    var TotalPowerConsumptionEndWeek = "{}";
    var TotalPowerConsumptionDeltaWeek = "{}";
    var CompressorInletTemperatureMinWeek = "{}";
    var CompressorInletTemperatureMaxWeek = "{}";
    var CompressorInletTemperatureAverageWeek = "{}";
    var IntermediateInjectionTemperatureMinWeek = "{}";
    var IntermediateInjectionTemperatureMaxWeek = "{}";
    var IntermediateInjectionTemperatureAverageWeek = "{}";
    var HotGasTemperatureMinWeek = "{}";
    var HotGasTemperatureMaxWeek = "{}";
    var HotGasTemperatureAverageWeek = "{}";
    var CondenserTemperatureMinWeek = "{}";
    var CondenserTemperatureMaxWeek = "{}";
    var CondenserTemperatureAverageWeek = "{}";
    var OilSumpTemperatureMinWeek = "{}";
    var OilSumpTemperatureMaxWeek = "{}";
    var OilSumpTemperatureAverageWeek = "{}";
    var LowPressureMinWeek = "{}";
    var LowPressureMaxWeek = "{}";
    var LowPressureAverageWeek = "{}";
    var PressureMediumMinWeek = "{}";
    var PressureMediumMaxWeek = "{}";
    var PressureMediumAverageWeek = "{}";
    var HighPressureMinWeek = "{}";
    var HighPressureMaxWeek = "{}";
    var HighPressureAverageWeek = "{}";
    var WaterVolumeCurrentMinWeek = "{}";
    var WaterVolumeCurrentMaxWeek = "{}";
    var WaterVolumeCurrentAverageWeek = "{}";
    var VoltageInverterMinWeek = "{}";
    var VoltageInverterMaxWeek = "{}";
    var VoltageInverterAverageWeek = "{}";
    var ActualSpeedDensifierMinWeek = "{}";
    var ActualSpeedDensifierMaxWeek = "{}";
    var ActualSpeedDensifierAverageWeek = "{}";
    var SettingSpeedCompressedMinWeek = "{}";
    var SettingSpeedCompressedMaxWeek = "{}";
    var SettingSpeedCompressedAverageWeek = "{}";
    var FanPowerRelMinWeek = "{}";
    var FanPowerRelMaxWeek = "{}";
    var FanPowerRelAverageWeek = "{}";
    var VaporizerHeatQuantityHeatingDayStartWeek = "{}";
    var VaporizerHeatQuantityHeatingDayEndWeek = "{}";
    var VaporizerHeatQuantityHeatingDayDeltaWeek = "{}";
    var VaporizerHeatQuantityHeatingTotalStartWeek = "{}";
    var VaporizerHeatQuantityHeatingTotalEndWeek = "{}";
    var VaporizerHeatQuantityHeatingTotalDeltaWeek = "{}";
    var VaporizerHeatQuantityHotWaterDayStartWeek = "{}";
    var VaporizerHeatQuantityHotWaterDayEndWeek = "{}";
    var VaporizerHeatQuantityHotWaterDayDeltaWeek = "{}";
    var VaporizerHeatQuantityHotWaterTotalStartWeek = "{}";
    var VaporizerHeatQuantityHotWaterTotalEndWeek = "{}";
    var VaporizerHeatQuantityHotWaterTotalDeltaWeek = "{}";
    var ReheatingStagesHeatQuantityHeatingSumStartWeek = "{}";
    var ReheatingStagesHeatQuantityHeatingSumEndWeek = "{}";
    var ReheatingStagesHeatQuantityHeatingSumDeltaWeek = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalStartWeek = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalEndWeek = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalDeltaWeek = "{}";
    var PowerConsumptionHeatingDayStartWeek = "{}";
    var PowerConsumptionHeatingDayEndWeek = "{}";
    var PowerConsumptionHeatingDayDeltaWeek = "{}";
    var PowerConsumptionHeatingSumStartWeek = "{}";
    var PowerConsumptionHeatingSumEndWeek = "{}";
    var PowerConsumptionHeatingSumDeltaWeek = "{}";
    var PowerConsumptionHotWaterDayStartWeek = "{}";
    var PowerConsumptionHotWaterDayEndWeek = "{}";
    var PowerConsumptionHotWaterDayDeltaWeek = "{}";
    var PowerConsumptionHotWaterSumStartWeek = "{}";
    var PowerConsumptionHotWaterSumEndWeek = "{}";
    var PowerConsumptionHotWaterSumDeltaWeek = "{}";
    var RuntimeVaporizerHeatingStartWeek = "{}";
    var RuntimeVaporizerHeatingEndWeek = "{}";
    var RuntimeVaporizerHeatingDeltaWeek = "{}";
    var RuntimeVaporizerHotWaterStartWeek = "{}";
    var RuntimeVaporizerHotWaterEndWeek = "{}";
    var RuntimeVaporizerHotWaterDeltaWeek = "{}";
    var RuntimeVaporizerDefrostStartWeek = "{}";
    var RuntimeVaporizerDefrostEndWeek = "{}";
    var RuntimeVaporizerDefrostDeltaWeek = "{}";
    var ReheatingStages1StartWeek = "{}";
    var ReheatingStages1EndWeek = "{}";
    var ReheatingStages1DeltaWeek = "{}";
    var ReheatingStages2StartWeek = "{}";
    var ReheatingStages2EndWeek = "{}";
    var ReheatingStages2DeltaWeek = "{}";
    var DefrostTimeStartWeek = "{}";
    var DefrostTimeEndWeek = "{}";
    var DefrostTimeDeltaWeek = "{}";
    var DefrostStartsStartWeek = "{}";
    var DefrostStartsEndWeek = "{}";
    var DefrostStartsDeltaWeek = "{}";

    var PerformanceFactorStartMonth = "{}";
    var PerformanceFactorEndMonth = "{}";
    var PerformanceFactorDeltaMonth = "{}";
    var ReturnTemperatureMinMonth = "{}";
    var ReturnTemperatureMaxMonth = "{}";
    var ReturnTemperatureAverageMonth = "{}";
    var InletTemperatureMinMonth = "{}";
    var InletTemperatureMaxMonth = "{}";
    var InletTemperatureAverageMonth = "{}";
    var AntiFreezeTemperatureMinMonth = "{}";
    var AntiFreezeTemperatureMaxMonth = "{}";
    var AntiFreezeTemperatureAverageMonth = "{}";
    var OutdoorTemperatureMinMonth = "{}";
    var OutdoorTemperatureMaxMonth = "{}";
    var OutdoorTemperatureAverageMonth = "{}";
    var ExhaustAirTemperatureMinMonth = "{}";
    var ExhaustAirTemperatureMaxMonth = "{}";
    var ExhaustAirTemperatureAverageMonth = "{}";
    var EvaporatorTemperatureMinMonth = "{}";
    var EvaporatorTemperatureMaxMonth = "{}";
    var EvaporatorTemperatureAverageMonth = "{}";
    var TotalPowerConsumptionStartMonth = "{}";
    var TotalPowerConsumptionEndMonth = "{}";
    var TotalPowerConsumptionDeltaMonth = "{}";
    var CompressorInletTemperatureMinMonth = "{}";
    var CompressorInletTemperatureMaxMonth = "{}";
    var CompressorInletTemperatureAverageMonth = "{}";
    var IntermediateInjectionTemperatureMinMonth = "{}";
    var IntermediateInjectionTemperatureMaxMonth = "{}";
    var IntermediateInjectionTemperatureAverageMonth = "{}";
    var HotGasTemperatureMinMonth = "{}";
    var HotGasTemperatureMaxMonth = "{}";
    var HotGasTemperatureAverageMonth = "{}";
    var CondenserTemperatureMinMonth = "{}";
    var CondenserTemperatureMaxMonth = "{}";
    var CondenserTemperatureAverageMonth = "{}";
    var OilSumpTemperatureMinMonth = "{}";
    var OilSumpTemperatureMaxMonth = "{}";
    var OilSumpTemperatureAverageMonth = "{}";
    var LowPressureMinMonth = "{}";
    var LowPressureMaxMonth = "{}";
    var LowPressureAverageMonth = "{}";
    var PressureMediumMinMonth = "{}";
    var PressureMediumMaxMonth = "{}";
    var PressureMediumAverageMonth = "{}";
    var HighPressureMinMonth = "{}";
    var HighPressureMaxMonth = "{}";
    var HighPressureAverageMonth = "{}";
    var WaterVolumeCurrentMinMonth = "{}";
    var WaterVolumeCurrentMaxMonth = "{}";
    var WaterVolumeCurrentAverageMonth = "{}";
    var VoltageInverterMinMonth = "{}";
    var VoltageInverterMaxMonth = "{}";
    var VoltageInverterAverageMonth = "{}";
    var ActualSpeedDensifierMinMonth = "{}";
    var ActualSpeedDensifierMaxMonth = "{}";
    var ActualSpeedDensifierAverageMonth = "{}";
    var SettingSpeedCompressedMinMonth = "{}";
    var SettingSpeedCompressedMaxMonth = "{}";
    var SettingSpeedCompressedAverageMonth = "{}";
    var FanPowerRelMinMonth = "{}";
    var FanPowerRelMaxMonth = "{}";
    var FanPowerRelAverageMonth = "{}";
    var VaporizerHeatQuantityHeatingDayStartMonth = "{}";
    var VaporizerHeatQuantityHeatingDayEndMonth = "{}";
    var VaporizerHeatQuantityHeatingDayDeltaMonth = "{}";
    var VaporizerHeatQuantityHeatingTotalStartMonth = "{}";
    var VaporizerHeatQuantityHeatingTotalEndMonth = "{}";
    var VaporizerHeatQuantityHeatingTotalDeltaMonth = "{}";
    var VaporizerHeatQuantityHotWaterDayStartMonth = "{}";
    var VaporizerHeatQuantityHotWaterDayEndMonth = "{}";
    var VaporizerHeatQuantityHotWaterDayDeltaMonth = "{}";
    var VaporizerHeatQuantityHotWaterTotalStartMonth = "{}";
    var VaporizerHeatQuantityHotWaterTotalEndMonth = "{}";
    var VaporizerHeatQuantityHotWaterTotalDeltaMonth = "{}";
    var ReheatingStagesHeatQuantityHeatingSumStartMonth = "{}";
    var ReheatingStagesHeatQuantityHeatingSumEndMonth = "{}";
    var ReheatingStagesHeatQuantityHeatingSumDeltaMonth = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalStartMonth = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalEndMonth = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalDeltaMonth = "{}";
    var PowerConsumptionHeatingDayStartMonth = "{}";
    var PowerConsumptionHeatingDayEndMonth = "{}";
    var PowerConsumptionHeatingDayDeltaMonth = "{}";
    var PowerConsumptionHeatingSumStartMonth = "{}";
    var PowerConsumptionHeatingSumEndMonth = "{}";
    var PowerConsumptionHeatingSumDeltaMonth = "{}";
    var PowerConsumptionHotWaterDayStartMonth = "{}";
    var PowerConsumptionHotWaterDayEndMonth = "{}";
    var PowerConsumptionHotWaterDayDeltaMonth = "{}";
    var PowerConsumptionHotWaterSumStartMonth = "{}";
    var PowerConsumptionHotWaterSumEndMonth = "{}";
    var PowerConsumptionHotWaterSumDeltaMonth = "{}";
    var RuntimeVaporizerHeatingStartMonth = "{}";
    var RuntimeVaporizerHeatingEndMonth = "{}";
    var RuntimeVaporizerHeatingDeltaMonth = "{}";
    var RuntimeVaporizerHotWaterStartMonth = "{}";
    var RuntimeVaporizerHotWaterEndMonth = "{}";
    var RuntimeVaporizerHotWaterDeltaMonth = "{}";
    var RuntimeVaporizerDefrostStartMonth = "{}";
    var RuntimeVaporizerDefrostEndMonth = "{}";
    var RuntimeVaporizerDefrostDeltaMonth = "{}";
    var ReheatingStages1StartMonth = "{}";
    var ReheatingStages1EndMonth = "{}";
    var ReheatingStages1DeltaMonth = "{}";
    var ReheatingStages2StartMonth = "{}";
    var ReheatingStages2EndMonth = "{}";
    var ReheatingStages2DeltaMonth = "{}";
    var DefrostTimeStartMonth = "{}";
    var DefrostTimeEndMonth = "{}";
    var DefrostTimeDeltaMonth = "{}";
    var DefrostStartsStartMonth = "{}";
    var DefrostStartsEndMonth = "{}";
    var DefrostStartsDeltaMonth = "{}";

	var PerformanceFactorStartYear = "{}";
    var PerformanceFactorEndYear = "{}";
    var PerformanceFactorDeltaYear = "{}";
    var ReturnTemperatureMinYear = "{}";
    var ReturnTemperatureMaxYear = "{}";
    var ReturnTemperatureAverageYear = "{}";
    var InletTemperatureMinYear = "{}";
    var InletTemperatureMaxYear = "{}";
    var InletTemperatureAverageYear = "{}";
    var AntiFreezeTemperatureMinYear = "{}";
    var AntiFreezeTemperatureMaxYear = "{}";
    var AntiFreezeTemperatureAverageYear = "{}";
    var OutdoorTemperatureMinYear = "{}";
    var OutdoorTemperatureMaxYear = "{}";
    var OutdoorTemperatureAverageYear = "{}";
    var ExhaustAirTemperatureMinYear = "{}";
    var ExhaustAirTemperatureMaxYear = "{}";
    var ExhaustAirTemperatureAverageYear = "{}";
    var EvaporatorTemperatureMinYear = "{}";
    var EvaporatorTemperatureMaxYear = "{}";
    var EvaporatorTemperatureAverageYear = "{}";
    var TotalPowerConsumptionStartYear = "{}";
    var TotalPowerConsumptionEndYear = "{}";
    var TotalPowerConsumptionDeltaYear = "{}";
    var CompressorInletTemperatureMinYear = "{}";
    var CompressorInletTemperatureMaxYear = "{}";
    var CompressorInletTemperatureAverageYear = "{}";
    var IntermediateInjectionTemperatureMinYear = "{}";
    var IntermediateInjectionTemperatureMaxYear = "{}";
    var IntermediateInjectionTemperatureAverageYear = "{}";
    var HotGasTemperatureMinYear = "{}";
    var HotGasTemperatureMaxYear = "{}";
    var HotGasTemperatureAverageYear = "{}";
    var CondenserTemperatureMinYear = "{}";
    var CondenserTemperatureMaxYear = "{}";
    var CondenserTemperatureAverageYear = "{}";
    var OilSumpTemperatureMinYear = "{}";
    var OilSumpTemperatureMaxYear = "{}";
    var OilSumpTemperatureAverageYear = "{}";
    var LowPressureMinYear = "{}";
    var LowPressureMaxYear = "{}";
    var LowPressureAverageYear = "{}";
    var PressureMediumMinYear = "{}";
    var PressureMediumMaxYear = "{}";
    var PressureMediumAverageYear = "{}";
    var HighPressureMinYear = "{}";
    var HighPressureMaxYear = "{}";
    var HighPressureAverageYear = "{}";
    var WaterVolumeCurrentMinYear = "{}";
    var WaterVolumeCurrentMaxYear = "{}";
    var WaterVolumeCurrentAverageYear = "{}";
    var VoltageInverterMinYear = "{}";
    var VoltageInverterMaxYear = "{}";
    var VoltageInverterAverageYear = "{}";
    var ActualSpeedDensifierMinYear = "{}";
    var ActualSpeedDensifierMaxYear = "{}";
    var ActualSpeedDensifierAverageYear = "{}";
    var SettingSpeedCompressedMinYear = "{}";
    var SettingSpeedCompressedMaxYear = "{}";
    var SettingSpeedCompressedAverageYear = "{}";
    var FanPowerRelMinYear = "{}";
    var FanPowerRelMaxYear = "{}";
    var FanPowerRelAverageYear = "{}";
    var VaporizerHeatQuantityHeatingDayStartYear = "{}";
    var VaporizerHeatQuantityHeatingDayEndYear = "{}";
    var VaporizerHeatQuantityHeatingDayDeltaYear = "{}";
    var VaporizerHeatQuantityHeatingTotalStartYear = "{}";
    var VaporizerHeatQuantityHeatingTotalEndYear = "{}";
    var VaporizerHeatQuantityHeatingTotalDeltaYear = "{}";
    var VaporizerHeatQuantityHotWaterDayStartYear = "{}";
    var VaporizerHeatQuantityHotWaterDayEndYear = "{}";
    var VaporizerHeatQuantityHotWaterDayDeltaYear = "{}";
    var VaporizerHeatQuantityHotWaterTotalStartYear = "{}";
    var VaporizerHeatQuantityHotWaterTotalEndYear = "{}";
    var VaporizerHeatQuantityHotWaterTotalDeltaYear = "{}";
    var ReheatingStagesHeatQuantityHeatingSumStartYear = "{}";
    var ReheatingStagesHeatQuantityHeatingSumEndYear = "{}";
    var ReheatingStagesHeatQuantityHeatingSumDeltaYear = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalStartYear = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalEndYear = "{}";
    var ReheatingStagesHeatQuantityHotWaterTotalDeltaYear = "{}";
    var PowerConsumptionHeatingDayStartYear = "{}";
    var PowerConsumptionHeatingDayEndYear = "{}";
    var PowerConsumptionHeatingDayDeltaYear = "{}";
    var PowerConsumptionHeatingSumStartYear = "{}";
    var PowerConsumptionHeatingSumEndYear = "{}";
    var PowerConsumptionHeatingSumDeltaYear = "{}";
    var PowerConsumptionHotWaterDayStartYear = "{}";
    var PowerConsumptionHotWaterDayEndYear = "{}";
    var PowerConsumptionHotWaterDayDeltaYear = "{}";
    var PowerConsumptionHotWaterSumStartYear = "{}";
    var PowerConsumptionHotWaterSumEndYear = "{}";
    var PowerConsumptionHotWaterSumDeltaYear = "{}";
    var RuntimeVaporizerHeatingStartYear = "{}";
    var RuntimeVaporizerHeatingEndYear = "{}";
    var RuntimeVaporizerHeatingDeltaYear = "{}";
    var RuntimeVaporizerHotWaterStartYear = "{}";
    var RuntimeVaporizerHotWaterEndYear = "{}";
    var RuntimeVaporizerHotWaterDeltaYear = "{}";
    var RuntimeVaporizerDefrostStartYear = "{}";
    var RuntimeVaporizerDefrostEndYear = "{}";
    var RuntimeVaporizerDefrostDeltaYear = "{}";
    var ReheatingStages1StartYear = "{}";
    var ReheatingStages1EndYear = "{}";
    var ReheatingStages1DeltaYear = "{}";
    var ReheatingStages2StartYear = "{}";
    var ReheatingStages2EndYear = "{}";
    var ReheatingStages2DeltaYear = "{}";
    var DefrostTimeStartYear = "{}";
    var DefrostTimeEndYear = "{}";
    var DefrostTimeDeltaYear = "{}";
    var DefrostStartsStartYear = "{}";
    var DefrostStartsEndYear = "{}";
    var DefrostStartsDeltaYear = "{}";
    
    if (Model == null)
    {
        Console.WriteLine("No data showed up in HeatPump/index.cshtml!");
    }
    else
    {
        XLabelsDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => new DateTime((int)x.Year, 1,1).Add(TimeSpan.FromDays(x.PeriodNumber))).ToList());
        XLabelsWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => new DateTime((int)x.Year, 1,1).Add(TimeSpan.FromDays(x.PeriodNumber))).ToList());
        XLabelsMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => new DateTime((int)x.Year, 1,1).Add(TimeSpan.FromDays(x.PeriodNumber))).ToList());
        XLabelsYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => new DateTime((int)x.Year, 1,1).Add(TimeSpan.FromDays(x.PeriodNumber))).ToList());

        StartColorDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHeatingDayStart).Select(c => startColor).ToList());
        DeltaColorDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHeatingDayDelta).Select(c => deltaColor).ToList());
        EndColorDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHeatingDayEnd).Select(c => endColor).ToList());      
        MinColorDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReturnTemperatureMin).Select(c => minColor).ToList()); 
        MaxColorDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReturnTemperatureMax).Select(c => maxColor).ToList());
        AverageColorDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReturnTemperatureAverage).Select(c => averageColor).ToList());    

        StartColorWeek =  Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHeatingDayStart).Select(c => startColor).ToList());
        DeltaColorWeek =  Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHeatingDayDelta).Select(c => deltaColor).ToList());
        EndColorWeek =  Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHeatingDayEnd).Select(c => endColor).ToList());      
        MinColorWeek =  Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReturnTemperatureMin).Select(c => minColor).ToList()); 
        MaxColorWeek =  Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReturnTemperatureMax).Select(c => maxColor).ToList());
        AverageColorWeek =  Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReturnTemperatureAverage).Select(c => averageColor).ToList());

		StartColorMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHeatingDayStart).Select(c => startColor).ToList());
        DeltaColorMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHeatingDayDelta).Select(c => deltaColor).ToList());
        EndColorMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHeatingDayEnd).Select(c => endColor).ToList());      
        MinColorMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReturnTemperatureMin).Select(c => minColor).ToList()); 
        MaxColorMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReturnTemperatureMax).Select(c => maxColor).ToList());
        AverageColorMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReturnTemperatureAverage).Select(c => averageColor).ToList());

		StartColorYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHeatingDayStart).Select(c => startColor).ToList());
        DeltaColorYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHeatingDayDelta).Select(c => deltaColor).ToList());
        EndColorYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHeatingDayEnd).Select(c => endColor).ToList());      
        MinColorYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReturnTemperatureMin).Select(c => minColor).ToList()); 
        MaxColorYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReturnTemperatureMax).Select(c => maxColor).ToList());
        AverageColorYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReturnTemperatureAverage).Select(c => averageColor).ToList());        

        PerformanceFactorStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => (x.VaporizerHeatQuantityHeatingDayStart + x.VaporizerHeatQuantityHotWaterDayStart) / (x.PowerConsumptionHeatingDayStart + x.PowerConsumptionHotWaterDayStart)).ToList());
        PerformanceFactorDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => (x.VaporizerHeatQuantityHeatingDayDelta + x.VaporizerHeatQuantityHotWaterDayDelta) / (x.PowerConsumptionHeatingDayDelta + x.PowerConsumptionHotWaterDayDelta)).ToList());
        PerformanceFactorEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => (x.VaporizerHeatQuantityHeatingDayEnd + x.VaporizerHeatQuantityHotWaterDayEnd) / (x.PowerConsumptionHeatingDayEnd + x.PowerConsumptionHotWaterDayEnd)).ToList());
        
        ReturnTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReturnTemperatureMin).ToList()); 
        ReturnTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReturnTemperatureMax).ToList());
        ReturnTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReturnTemperatureAverage).ToList());
        InletTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.InletTemperatureMin).ToList());
        InletTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.InletTemperatureMax).ToList());
        InletTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.InletTemperatureAverage).ToList());
        AntiFreezeTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.AntiFreezeTemperatureMin).ToList());
        AntiFreezeTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.AntiFreezeTemperatureMax).ToList());
        AntiFreezeTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.AntiFreezeTemperatureAverage).ToList());
        OutdoorTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.OutdoorTemperatureMin).ToList());
        OutdoorTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.OutdoorTemperatureMax).ToList());
        OutdoorTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.OutdoorTemperatureAverage).ToList());
        ExhaustAirTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ExhaustAirTemperatureMin).ToList());
        ExhaustAirTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ExhaustAirTemperatureMax).ToList());
        ExhaustAirTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ExhaustAirTemperatureAverage).ToList());
        EvaporatorTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.EvaporatorTemperatureMin).ToList());
        EvaporatorTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.EvaporatorTemperatureMax).ToList());
        EvaporatorTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.EvaporatorTemperatureAverage).ToList());
        TotalPowerConsumptionStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.TotalPowerConsumptionStart).ToList());
        TotalPowerConsumptionEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.TotalPowerConsumptionEnd).ToList());
        TotalPowerConsumptionDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.TotalPowerConsumptionDelta).ToList());
        CompressorInletTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.CompressorInletTemperatureMin).ToList());
        CompressorInletTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.CompressorInletTemperatureMax).ToList());
        CompressorInletTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.CompressorInletTemperatureAverage).ToList());
        IntermediateInjectionTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.IntermediateInjectionTemperatureMin).ToList());
        IntermediateInjectionTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.IntermediateInjectionTemperatureMax).ToList());
        IntermediateInjectionTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.IntermediateInjectionTemperatureAverage).ToList());
        HotGasTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.HotGasTemperatureMin).ToList());
        HotGasTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.HotGasTemperatureMax).ToList());
        HotGasTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.HotGasTemperatureAverage).ToList());
        CondenserTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.CondenserTemperatureMin).ToList());
        CondenserTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.CondenserTemperatureMax).ToList());
        CondenserTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.CondenserTemperatureAverage).ToList());
        OilSumpTemperatureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.OilSumpTemperatureMin).ToList());
        OilSumpTemperatureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.OilSumpTemperatureMax).ToList());
        OilSumpTemperatureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.OilSumpTemperatureAverage).ToList());
        LowPressureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.LowPressureMin).ToList());
        LowPressureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.LowPressureMax).ToList());
        LowPressureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.LowPressureAverage).ToList());
        PressureMediumMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PressureMediumMin).ToList());
        PressureMediumMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PressureMediumMax).ToList());
        PressureMediumAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PressureMediumAverage).ToList());
        HighPressureMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.HighPressureMin).ToList());
        HighPressureMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.HighPressureMax).ToList());
        HighPressureAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.HighPressureAverage).ToList());
        WaterVolumeCurrentMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.WaterVolumeCurrentMin).ToList());
        WaterVolumeCurrentMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.WaterVolumeCurrentMax).ToList());
        WaterVolumeCurrentAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.WaterVolumeCurrentAverage).ToList());
        VoltageInverterMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VoltageInverterMin).ToList());
        VoltageInverterMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VoltageInverterMax).ToList());
        VoltageInverterAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VoltageInverterAverage).ToList());
        ActualSpeedDensifierMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ActualSpeedDensifierMin).ToList());
        ActualSpeedDensifierMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ActualSpeedDensifierMax).ToList());
        ActualSpeedDensifierAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ActualSpeedDensifierAverage).ToList());
        SettingSpeedCompressedMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.SettingSpeedCompressedMin).ToList());
        SettingSpeedCompressedMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.SettingSpeedCompressedMax).ToList());
        SettingSpeedCompressedAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.SettingSpeedCompressedAverage).ToList());
        FanPowerRelMinDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.FanPowerRelMin).ToList());
        FanPowerRelMaxDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.FanPowerRelMax).ToList());
        FanPowerRelAverageDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.FanPowerRelAverage).ToList());
        VaporizerHeatQuantityHeatingDayStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHeatingDayStart).ToList());
        VaporizerHeatQuantityHeatingDayEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHeatingDayEnd).ToList());
        VaporizerHeatQuantityHeatingDayDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHeatingDayDelta).ToList());
        VaporizerHeatQuantityHeatingTotalStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHeatingTotalStart).ToList());
        VaporizerHeatQuantityHeatingTotalEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHeatingTotalEnd).ToList());
        VaporizerHeatQuantityHeatingTotalDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHeatingTotalDelta).ToList());
        VaporizerHeatQuantityHotWaterDayStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHotWaterDayStart).ToList());
        VaporizerHeatQuantityHotWaterDayEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHotWaterDayEnd).ToList());
        VaporizerHeatQuantityHotWaterDayDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHotWaterDayDelta).ToList());
        VaporizerHeatQuantityHotWaterTotalStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHotWaterTotalStart).ToList());
        VaporizerHeatQuantityHotWaterTotalEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHotWaterTotalEnd).ToList());
        VaporizerHeatQuantityHotWaterTotalDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.VaporizerHeatQuantityHotWaterTotalDelta).ToList());
        ReheatingStagesHeatQuantityHeatingSumStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStagesHeatQuantityHeatingSumStart).ToList()); 
        ReheatingStagesHeatQuantityHeatingSumEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStagesHeatQuantityHeatingSumEnd).ToList()); 
        ReheatingStagesHeatQuantityHeatingSumDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStagesHeatQuantityHeatingSumDelta).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalStart).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalEnd).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalDelta).ToList()); 
        PowerConsumptionHeatingDayStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHeatingDayStart).ToList()); 
        PowerConsumptionHeatingDayEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHeatingDayEnd).ToList()); 
        PowerConsumptionHeatingDayDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHeatingDayDelta).ToList()); 
        PowerConsumptionHeatingSumStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHeatingSumStart).ToList()); 
        PowerConsumptionHeatingSumEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHeatingSumEnd).ToList()); 
        PowerConsumptionHeatingSumDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHeatingSumDelta).ToList()); 
        PowerConsumptionHotWaterDayStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHotWaterDayStart).ToList()); 
        PowerConsumptionHotWaterDayEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHotWaterDayEnd).ToList()); 
        PowerConsumptionHotWaterDayDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHotWaterDayDelta).ToList()); 
        PowerConsumptionHotWaterSumStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHotWaterSumStart).ToList()); 
        PowerConsumptionHotWaterSumEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHotWaterSumEnd).ToList()); 
        PowerConsumptionHotWaterSumDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.PowerConsumptionHotWaterSumDelta).ToList()); 
        RuntimeVaporizerHeatingStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.RuntimeVaporizerHeatingStart).ToList()); 
        RuntimeVaporizerHeatingEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.RuntimeVaporizerHeatingEnd).ToList()); 
        RuntimeVaporizerHeatingDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.RuntimeVaporizerHeatingDelta).ToList()); 
        RuntimeVaporizerHotWaterStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.RuntimeVaporizerHotWaterStart).ToList()); 
        RuntimeVaporizerHotWaterEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.RuntimeVaporizerHotWaterEnd).ToList()); 
        RuntimeVaporizerHotWaterDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.RuntimeVaporizerHotWaterDelta).ToList()); 
        RuntimeVaporizerDefrostStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.RuntimeVaporizerDefrostStart).ToList()); 
        RuntimeVaporizerDefrostEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.RuntimeVaporizerDefrostEnd).ToList()); 
        RuntimeVaporizerDefrostDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.RuntimeVaporizerDefrostDelta).ToList()); 
        ReheatingStages1StartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStages1Start).ToList()); 
        ReheatingStages1EndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStages1End).ToList()); 
        ReheatingStages1DeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStages1Delta).ToList()); 
        ReheatingStages2StartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStages2Start).ToList()); 
        ReheatingStages2EndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStages2End).ToList()); 
        ReheatingStages2DeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.ReheatingStages2Delta).ToList()); 
        DefrostTimeStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.DefrostTimeStart).ToList()); 
        DefrostTimeEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.DefrostTimeEnd).ToList()); 
        DefrostTimeDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.DefrostTimeDelta).ToList()); 
        DefrostStartsStartDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.DefrostStartsStart).ToList()); 
        DefrostStartsEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.DefrostStartsEnd).ToList()); 
        DefrostStartsDeltaDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Day").Select(x => x.DefrostStartsDelta).ToList());
        
        PerformanceFactorStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => (x.VaporizerHeatQuantityHeatingDayStart + x.VaporizerHeatQuantityHotWaterDayStart) / (x.PowerConsumptionHeatingDayStart + x.PowerConsumptionHotWaterDayStart)).ToList());
        PerformanceFactorDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => (x.VaporizerHeatQuantityHeatingDayDelta + x.VaporizerHeatQuantityHotWaterDayDelta) / (x.PowerConsumptionHeatingDayDelta + x.PowerConsumptionHotWaterDayDelta)).ToList());
        PerformanceFactorEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => (x.VaporizerHeatQuantityHeatingDayEnd + x.VaporizerHeatQuantityHotWaterDayEnd) / (x.PowerConsumptionHeatingDayEnd + x.PowerConsumptionHotWaterDayEnd)).ToList());

        ReturnTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReturnTemperatureMin).ToList()); 
        ReturnTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReturnTemperatureMax).ToList());
        ReturnTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReturnTemperatureAverage).ToList());        
        InletTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.InletTemperatureMin).ToList());
        InletTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.InletTemperatureMax).ToList());
        InletTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.InletTemperatureAverage).ToList());
        AntiFreezeTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.AntiFreezeTemperatureMin).ToList());
        AntiFreezeTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.AntiFreezeTemperatureMax).ToList());
        AntiFreezeTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.AntiFreezeTemperatureAverage).ToList());
        OutdoorTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.OutdoorTemperatureMin).ToList());
        OutdoorTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.OutdoorTemperatureMax).ToList());
        OutdoorTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.OutdoorTemperatureAverage).ToList());
        ExhaustAirTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ExhaustAirTemperatureMin).ToList());
        ExhaustAirTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ExhaustAirTemperatureMax).ToList());
        ExhaustAirTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ExhaustAirTemperatureAverage).ToList());
        EvaporatorTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.EvaporatorTemperatureMin).ToList());
        EvaporatorTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.EvaporatorTemperatureMax).ToList());
        EvaporatorTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.EvaporatorTemperatureAverage).ToList());
        TotalPowerConsumptionStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.TotalPowerConsumptionStart).ToList());
        TotalPowerConsumptionEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.TotalPowerConsumptionEnd).ToList());
        TotalPowerConsumptionDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.TotalPowerConsumptionDelta).ToList());
        CompressorInletTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.CompressorInletTemperatureMin).ToList());
        CompressorInletTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.CompressorInletTemperatureMax).ToList());
        CompressorInletTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.CompressorInletTemperatureAverage).ToList());
        IntermediateInjectionTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.IntermediateInjectionTemperatureMin).ToList());
        IntermediateInjectionTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.IntermediateInjectionTemperatureMax).ToList());
        IntermediateInjectionTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.IntermediateInjectionTemperatureAverage).ToList());
        HotGasTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.HotGasTemperatureMin).ToList());
        HotGasTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.HotGasTemperatureMax).ToList());
        HotGasTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.HotGasTemperatureAverage).ToList());
        CondenserTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.CondenserTemperatureMin).ToList());
        CondenserTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.CondenserTemperatureMax).ToList());
        CondenserTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.CondenserTemperatureAverage).ToList());
        OilSumpTemperatureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.OilSumpTemperatureMin).ToList());
        OilSumpTemperatureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.OilSumpTemperatureMax).ToList());
        OilSumpTemperatureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.OilSumpTemperatureAverage).ToList());
        LowPressureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.LowPressureMin).ToList());
        LowPressureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.LowPressureMax).ToList());
        LowPressureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.LowPressureAverage).ToList());
        PressureMediumMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PressureMediumMin).ToList());
        PressureMediumMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PressureMediumMax).ToList());
        PressureMediumAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PressureMediumAverage).ToList());
        HighPressureMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.HighPressureMin).ToList());
        HighPressureMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.HighPressureMax).ToList());
        HighPressureAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.HighPressureAverage).ToList());
        WaterVolumeCurrentMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.WaterVolumeCurrentMin).ToList());
        WaterVolumeCurrentMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.WaterVolumeCurrentMax).ToList());
        WaterVolumeCurrentAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.WaterVolumeCurrentAverage).ToList());
        VoltageInverterMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VoltageInverterMin).ToList());
        VoltageInverterMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VoltageInverterMax).ToList());
        VoltageInverterAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VoltageInverterAverage).ToList());
        ActualSpeedDensifierMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ActualSpeedDensifierMin).ToList());
        ActualSpeedDensifierMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ActualSpeedDensifierMax).ToList());
        ActualSpeedDensifierAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ActualSpeedDensifierAverage).ToList());
        SettingSpeedCompressedMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.SettingSpeedCompressedMin).ToList());
        SettingSpeedCompressedMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.SettingSpeedCompressedMax).ToList());
        SettingSpeedCompressedAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.SettingSpeedCompressedAverage).ToList());
        FanPowerRelMinWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.FanPowerRelMin).ToList());
        FanPowerRelMaxWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.FanPowerRelMax).ToList());
        FanPowerRelAverageWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.FanPowerRelAverage).ToList());
        VaporizerHeatQuantityHeatingDayStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHeatingDayStart).ToList());
        VaporizerHeatQuantityHeatingDayEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHeatingDayEnd).ToList());
        VaporizerHeatQuantityHeatingDayDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHeatingDayDelta).ToList());
        VaporizerHeatQuantityHeatingTotalStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHeatingTotalStart).ToList());
        VaporizerHeatQuantityHeatingTotalEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHeatingTotalEnd).ToList());
        VaporizerHeatQuantityHeatingTotalDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHeatingTotalDelta).ToList());
        VaporizerHeatQuantityHotWaterDayStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHotWaterDayStart).ToList());
        VaporizerHeatQuantityHotWaterDayEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHotWaterDayEnd).ToList());
        VaporizerHeatQuantityHotWaterDayDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHotWaterDayDelta).ToList());
        VaporizerHeatQuantityHotWaterTotalStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHotWaterTotalStart).ToList());
        VaporizerHeatQuantityHotWaterTotalEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHotWaterTotalEnd).ToList());
        VaporizerHeatQuantityHotWaterTotalDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.VaporizerHeatQuantityHotWaterTotalDelta).ToList());
        ReheatingStagesHeatQuantityHeatingSumStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStagesHeatQuantityHeatingSumStart).ToList()); 
        ReheatingStagesHeatQuantityHeatingSumEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStagesHeatQuantityHeatingSumEnd).ToList()); 
        ReheatingStagesHeatQuantityHeatingSumDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStagesHeatQuantityHeatingSumDelta).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalStart).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalEnd).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalDelta).ToList()); 
        PowerConsumptionHeatingDayStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHeatingDayStart).ToList()); 
        PowerConsumptionHeatingDayEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHeatingDayEnd).ToList()); 
        PowerConsumptionHeatingDayDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHeatingDayDelta).ToList()); 
        PowerConsumptionHeatingSumStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHeatingSumStart).ToList()); 
        PowerConsumptionHeatingSumEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHeatingSumEnd).ToList()); 
        PowerConsumptionHeatingSumDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHeatingSumDelta).ToList()); 
        PowerConsumptionHotWaterDayStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHotWaterDayStart).ToList()); 
        PowerConsumptionHotWaterDayEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHotWaterDayEnd).ToList()); 
        PowerConsumptionHotWaterDayDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHotWaterDayDelta).ToList()); 
        PowerConsumptionHotWaterSumStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHotWaterSumStart).ToList()); 
        PowerConsumptionHotWaterSumEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHotWaterSumEnd).ToList()); 
        PowerConsumptionHotWaterSumDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.PowerConsumptionHotWaterSumDelta).ToList()); 
        RuntimeVaporizerHeatingStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.RuntimeVaporizerHeatingStart).ToList()); 
        RuntimeVaporizerHeatingEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.RuntimeVaporizerHeatingEnd).ToList()); 
        RuntimeVaporizerHeatingDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.RuntimeVaporizerHeatingDelta).ToList()); 
        RuntimeVaporizerHotWaterStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.RuntimeVaporizerHotWaterStart).ToList()); 
        RuntimeVaporizerHotWaterEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.RuntimeVaporizerHotWaterEnd).ToList()); 
        RuntimeVaporizerHotWaterDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.RuntimeVaporizerHotWaterDelta).ToList()); 
        RuntimeVaporizerDefrostStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.RuntimeVaporizerDefrostStart).ToList()); 
        RuntimeVaporizerDefrostEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.RuntimeVaporizerDefrostEnd).ToList()); 
        RuntimeVaporizerDefrostDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.RuntimeVaporizerDefrostDelta).ToList()); 
        ReheatingStages1StartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStages1Start).ToList()); 
        ReheatingStages1EndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStages1End).ToList()); 
        ReheatingStages1DeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStages1Delta).ToList()); 
        ReheatingStages2StartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStages2Start).ToList()); 
        ReheatingStages2EndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStages2End).ToList()); 
        ReheatingStages2DeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.ReheatingStages2Delta).ToList()); 
        DefrostTimeStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.DefrostTimeStart).ToList()); 
        DefrostTimeEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.DefrostTimeEnd).ToList()); 
        DefrostTimeDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.DefrostTimeDelta).ToList()); 
        DefrostStartsStartWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.DefrostStartsStart).ToList()); 
        DefrostStartsEndWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.DefrostStartsEnd).ToList()); 
        DefrostStartsDeltaWeek = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Week").Select(x => x.DefrostStartsDelta).ToList());
        
        PerformanceFactorStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => (x.VaporizerHeatQuantityHeatingDayStart + x.VaporizerHeatQuantityHotWaterDayStart) / (x.PowerConsumptionHeatingDayStart + x.PowerConsumptionHotWaterDayStart)).ToList());
        PerformanceFactorDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => (x.VaporizerHeatQuantityHeatingDayDelta + x.VaporizerHeatQuantityHotWaterDayDelta) / (x.PowerConsumptionHeatingDayDelta + x.PowerConsumptionHotWaterDayDelta)).ToList());
        PerformanceFactorEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => (x.VaporizerHeatQuantityHeatingDayEnd + x.VaporizerHeatQuantityHotWaterDayEnd) / (x.PowerConsumptionHeatingDayEnd + x.PowerConsumptionHotWaterDayEnd)).ToList());
        
        ReturnTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReturnTemperatureMin).ToList()); 
        ReturnTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReturnTemperatureMax).ToList());
        ReturnTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReturnTemperatureAverage).ToList());        
        InletTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.InletTemperatureMin).ToList());
        InletTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.InletTemperatureMax).ToList());
        InletTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.InletTemperatureAverage).ToList());
        AntiFreezeTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.AntiFreezeTemperatureMin).ToList());
        AntiFreezeTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.AntiFreezeTemperatureMax).ToList());
        AntiFreezeTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.AntiFreezeTemperatureAverage).ToList());
        OutdoorTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.OutdoorTemperatureMin).ToList());
        OutdoorTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.OutdoorTemperatureMax).ToList());
        OutdoorTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.OutdoorTemperatureAverage).ToList());
        ExhaustAirTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ExhaustAirTemperatureMin).ToList());
        ExhaustAirTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ExhaustAirTemperatureMax).ToList());
        ExhaustAirTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ExhaustAirTemperatureAverage).ToList());
        EvaporatorTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.EvaporatorTemperatureMin).ToList());
        EvaporatorTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.EvaporatorTemperatureMax).ToList());
        EvaporatorTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.EvaporatorTemperatureAverage).ToList());
        TotalPowerConsumptionStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.TotalPowerConsumptionStart).ToList());
        TotalPowerConsumptionEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.TotalPowerConsumptionEnd).ToList());
        TotalPowerConsumptionDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.TotalPowerConsumptionDelta).ToList());
        CompressorInletTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.CompressorInletTemperatureMin).ToList());
        CompressorInletTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.CompressorInletTemperatureMax).ToList());
        CompressorInletTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.CompressorInletTemperatureAverage).ToList());
        IntermediateInjectionTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.IntermediateInjectionTemperatureMin).ToList());
        IntermediateInjectionTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.IntermediateInjectionTemperatureMax).ToList());
        IntermediateInjectionTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.IntermediateInjectionTemperatureAverage).ToList());
        HotGasTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.HotGasTemperatureMin).ToList());
        HotGasTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.HotGasTemperatureMax).ToList());
        HotGasTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.HotGasTemperatureAverage).ToList());
        CondenserTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.CondenserTemperatureMin).ToList());
        CondenserTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.CondenserTemperatureMax).ToList());
        CondenserTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.CondenserTemperatureAverage).ToList());
        OilSumpTemperatureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.OilSumpTemperatureMin).ToList());
        OilSumpTemperatureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.OilSumpTemperatureMax).ToList());
        OilSumpTemperatureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.OilSumpTemperatureAverage).ToList());
        LowPressureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.LowPressureMin).ToList());
        LowPressureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.LowPressureMax).ToList());
        LowPressureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.LowPressureAverage).ToList());
        PressureMediumMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PressureMediumMin).ToList());
        PressureMediumMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PressureMediumMax).ToList());
        PressureMediumAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PressureMediumAverage).ToList());
        HighPressureMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.HighPressureMin).ToList());
        HighPressureMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.HighPressureMax).ToList());
        HighPressureAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.HighPressureAverage).ToList());
        WaterVolumeCurrentMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.WaterVolumeCurrentMin).ToList());
        WaterVolumeCurrentMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.WaterVolumeCurrentMax).ToList());
        WaterVolumeCurrentAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.WaterVolumeCurrentAverage).ToList());
        VoltageInverterMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VoltageInverterMin).ToList());
        VoltageInverterMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VoltageInverterMax).ToList());
        VoltageInverterAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VoltageInverterAverage).ToList());
        ActualSpeedDensifierMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ActualSpeedDensifierMin).ToList());
        ActualSpeedDensifierMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ActualSpeedDensifierMax).ToList());
        ActualSpeedDensifierAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ActualSpeedDensifierAverage).ToList());
        SettingSpeedCompressedMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.SettingSpeedCompressedMin).ToList());
        SettingSpeedCompressedMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.SettingSpeedCompressedMax).ToList());
        SettingSpeedCompressedAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.SettingSpeedCompressedAverage).ToList());
        FanPowerRelMinMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.FanPowerRelMin).ToList());
        FanPowerRelMaxMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.FanPowerRelMax).ToList());
        FanPowerRelAverageMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.FanPowerRelAverage).ToList());
        VaporizerHeatQuantityHeatingDayStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHeatingDayStart).ToList());
        VaporizerHeatQuantityHeatingDayEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHeatingDayEnd).ToList());
        VaporizerHeatQuantityHeatingDayDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHeatingDayDelta).ToList());
        VaporizerHeatQuantityHeatingTotalStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHeatingTotalStart).ToList());
        VaporizerHeatQuantityHeatingTotalEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHeatingTotalEnd).ToList());
        VaporizerHeatQuantityHeatingTotalDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHeatingTotalDelta).ToList());
        VaporizerHeatQuantityHotWaterDayStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHotWaterDayStart).ToList());
        VaporizerHeatQuantityHotWaterDayEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHotWaterDayEnd).ToList());
        VaporizerHeatQuantityHotWaterDayDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHotWaterDayDelta).ToList());
        VaporizerHeatQuantityHotWaterTotalStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHotWaterTotalStart).ToList());
        VaporizerHeatQuantityHotWaterTotalEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHotWaterTotalEnd).ToList());
        VaporizerHeatQuantityHotWaterTotalDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.VaporizerHeatQuantityHotWaterTotalDelta).ToList());
        ReheatingStagesHeatQuantityHeatingSumStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStagesHeatQuantityHeatingSumStart).ToList()); 
        ReheatingStagesHeatQuantityHeatingSumEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStagesHeatQuantityHeatingSumEnd).ToList()); 
        ReheatingStagesHeatQuantityHeatingSumDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStagesHeatQuantityHeatingSumDelta).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalStart).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalEnd).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalDelta).ToList()); 
        PowerConsumptionHeatingDayStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHeatingDayStart).ToList()); 
        PowerConsumptionHeatingDayEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHeatingDayEnd).ToList()); 
        PowerConsumptionHeatingDayDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHeatingDayDelta).ToList()); 
        PowerConsumptionHeatingSumStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHeatingSumStart).ToList()); 
        PowerConsumptionHeatingSumEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHeatingSumEnd).ToList()); 
        PowerConsumptionHeatingSumDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHeatingSumDelta).ToList()); 
        PowerConsumptionHotWaterDayStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHotWaterDayStart).ToList()); 
        PowerConsumptionHotWaterDayEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHotWaterDayEnd).ToList()); 
        PowerConsumptionHotWaterDayDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHotWaterDayDelta).ToList()); 
        PowerConsumptionHotWaterSumStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHotWaterSumStart).ToList()); 
        PowerConsumptionHotWaterSumEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHotWaterSumEnd).ToList()); 
        PowerConsumptionHotWaterSumDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.PowerConsumptionHotWaterSumDelta).ToList()); 
        RuntimeVaporizerHeatingStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.RuntimeVaporizerHeatingStart).ToList()); 
        RuntimeVaporizerHeatingEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.RuntimeVaporizerHeatingEnd).ToList()); 
        RuntimeVaporizerHeatingDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.RuntimeVaporizerHeatingDelta).ToList()); 
        RuntimeVaporizerHotWaterStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.RuntimeVaporizerHotWaterStart).ToList()); 
        RuntimeVaporizerHotWaterEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.RuntimeVaporizerHotWaterEnd).ToList()); 
        RuntimeVaporizerHotWaterDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.RuntimeVaporizerHotWaterDelta).ToList()); 
        RuntimeVaporizerDefrostStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.RuntimeVaporizerDefrostStart).ToList()); 
        RuntimeVaporizerDefrostEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.RuntimeVaporizerDefrostEnd).ToList()); 
        RuntimeVaporizerDefrostDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.RuntimeVaporizerDefrostDelta).ToList()); 
        ReheatingStages1StartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStages1Start).ToList()); 
        ReheatingStages1EndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStages1End).ToList()); 
        ReheatingStages1DeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStages1Delta).ToList()); 
        ReheatingStages2StartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStages2Start).ToList()); 
        ReheatingStages2EndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStages2End).ToList()); 
        ReheatingStages2DeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.ReheatingStages2Delta).ToList()); 
        DefrostTimeStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.DefrostTimeStart).ToList()); 
        DefrostTimeEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.DefrostTimeEnd).ToList()); 
        DefrostTimeDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.DefrostTimeDelta).ToList()); 
        DefrostStartsStartMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.DefrostStartsStart).ToList()); 
        DefrostStartsEndMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.DefrostStartsEnd).ToList()); 
        DefrostStartsDeltaMonth = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Month").Select(x => x.DefrostStartsDelta).ToList());
        
        PerformanceFactorStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => (x.VaporizerHeatQuantityHeatingDayStart + x.VaporizerHeatQuantityHotWaterDayStart) / (x.PowerConsumptionHeatingDayStart + x.PowerConsumptionHotWaterDayStart)).ToList());
        PerformanceFactorDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => (x.VaporizerHeatQuantityHeatingDayDelta + x.VaporizerHeatQuantityHotWaterDayDelta) / (x.PowerConsumptionHeatingDayDelta + x.PowerConsumptionHotWaterDayDelta)).ToList());
        PerformanceFactorEndDay = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => (x.VaporizerHeatQuantityHeatingDayEnd + x.VaporizerHeatQuantityHotWaterDayEnd) / (x.PowerConsumptionHeatingDayEnd + x.PowerConsumptionHotWaterDayEnd)).ToList());

        ReturnTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReturnTemperatureMin).ToList()); 
        ReturnTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReturnTemperatureMax).ToList());
        ReturnTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReturnTemperatureAverage).ToList());                 
        InletTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.InletTemperatureMin).ToList());
        InletTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.InletTemperatureMax).ToList());
        InletTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.InletTemperatureAverage).ToList());
        AntiFreezeTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.AntiFreezeTemperatureMin).ToList());
        AntiFreezeTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.AntiFreezeTemperatureMax).ToList());
        AntiFreezeTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.AntiFreezeTemperatureAverage).ToList());
        OutdoorTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.OutdoorTemperatureMin).ToList());
        OutdoorTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.OutdoorTemperatureMax).ToList());
        OutdoorTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.OutdoorTemperatureAverage).ToList());
        ExhaustAirTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ExhaustAirTemperatureMin).ToList());
        ExhaustAirTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ExhaustAirTemperatureMax).ToList());
        ExhaustAirTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ExhaustAirTemperatureAverage).ToList());
        EvaporatorTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.EvaporatorTemperatureMin).ToList());
        EvaporatorTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.EvaporatorTemperatureMax).ToList());
        EvaporatorTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.EvaporatorTemperatureAverage).ToList());
        TotalPowerConsumptionStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.TotalPowerConsumptionStart).ToList());
        TotalPowerConsumptionEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.TotalPowerConsumptionEnd).ToList());
        TotalPowerConsumptionDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.TotalPowerConsumptionDelta).ToList());
        CompressorInletTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.CompressorInletTemperatureMin).ToList());
        CompressorInletTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.CompressorInletTemperatureMax).ToList());
        CompressorInletTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.CompressorInletTemperatureAverage).ToList());
        IntermediateInjectionTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.IntermediateInjectionTemperatureMin).ToList());
        IntermediateInjectionTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.IntermediateInjectionTemperatureMax).ToList());
        IntermediateInjectionTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.IntermediateInjectionTemperatureAverage).ToList());
        HotGasTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.HotGasTemperatureMin).ToList());
        HotGasTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.HotGasTemperatureMax).ToList());
        HotGasTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.HotGasTemperatureAverage).ToList());
        CondenserTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.CondenserTemperatureMin).ToList());
        CondenserTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.CondenserTemperatureMax).ToList());
        CondenserTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.CondenserTemperatureAverage).ToList());
        OilSumpTemperatureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.OilSumpTemperatureMin).ToList());
        OilSumpTemperatureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.OilSumpTemperatureMax).ToList());
        OilSumpTemperatureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.OilSumpTemperatureAverage).ToList());
        LowPressureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.LowPressureMin).ToList());
        LowPressureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.LowPressureMax).ToList());
        LowPressureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.LowPressureAverage).ToList());
        PressureMediumMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PressureMediumMin).ToList());
        PressureMediumMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PressureMediumMax).ToList());
        PressureMediumAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PressureMediumAverage).ToList());
        HighPressureMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.HighPressureMin).ToList());
        HighPressureMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.HighPressureMax).ToList());
        HighPressureAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.HighPressureAverage).ToList());
        WaterVolumeCurrentMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.WaterVolumeCurrentMin).ToList());
        WaterVolumeCurrentMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.WaterVolumeCurrentMax).ToList());
        WaterVolumeCurrentAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.WaterVolumeCurrentAverage).ToList());
        VoltageInverterMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VoltageInverterMin).ToList());
        VoltageInverterMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VoltageInverterMax).ToList());
        VoltageInverterAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VoltageInverterAverage).ToList());
        ActualSpeedDensifierMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ActualSpeedDensifierMin).ToList());
        ActualSpeedDensifierMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ActualSpeedDensifierMax).ToList());
        ActualSpeedDensifierAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ActualSpeedDensifierAverage).ToList());
        SettingSpeedCompressedMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.SettingSpeedCompressedMin).ToList());
        SettingSpeedCompressedMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.SettingSpeedCompressedMax).ToList());
        SettingSpeedCompressedAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.SettingSpeedCompressedAverage).ToList());
        FanPowerRelMinYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.FanPowerRelMin).ToList());
        FanPowerRelMaxYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.FanPowerRelMax).ToList());
        FanPowerRelAverageYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.FanPowerRelAverage).ToList());
        VaporizerHeatQuantityHeatingDayStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHeatingDayStart).ToList());
        VaporizerHeatQuantityHeatingDayEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHeatingDayEnd).ToList());
        VaporizerHeatQuantityHeatingDayDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHeatingDayDelta).ToList());
        VaporizerHeatQuantityHeatingTotalStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHeatingTotalStart).ToList());
        VaporizerHeatQuantityHeatingTotalEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHeatingTotalEnd).ToList());
        VaporizerHeatQuantityHeatingTotalDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHeatingTotalDelta).ToList());
        VaporizerHeatQuantityHotWaterDayStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHotWaterDayStart).ToList());
        VaporizerHeatQuantityHotWaterDayEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHotWaterDayEnd).ToList());
        VaporizerHeatQuantityHotWaterDayDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHotWaterDayDelta).ToList());
        VaporizerHeatQuantityHotWaterTotalStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHotWaterTotalStart).ToList());
        VaporizerHeatQuantityHotWaterTotalEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHotWaterTotalEnd).ToList());
        VaporizerHeatQuantityHotWaterTotalDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.VaporizerHeatQuantityHotWaterTotalDelta).ToList());
        ReheatingStagesHeatQuantityHeatingSumStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStagesHeatQuantityHeatingSumStart).ToList()); 
        ReheatingStagesHeatQuantityHeatingSumEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStagesHeatQuantityHeatingSumEnd).ToList()); 
        ReheatingStagesHeatQuantityHeatingSumDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStagesHeatQuantityHeatingSumDelta).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalStart).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalEnd).ToList()); 
        ReheatingStagesHeatQuantityHotWaterTotalDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStagesHeatQuantityHotWaterTotalDelta).ToList()); 
        PowerConsumptionHeatingDayStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHeatingDayStart).ToList()); 
        PowerConsumptionHeatingDayEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHeatingDayEnd).ToList()); 
        PowerConsumptionHeatingDayDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHeatingDayDelta).ToList()); 
        PowerConsumptionHeatingSumStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHeatingSumStart).ToList()); 
        PowerConsumptionHeatingSumEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHeatingSumEnd).ToList()); 
        PowerConsumptionHeatingSumDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHeatingSumDelta).ToList()); 
        PowerConsumptionHotWaterDayStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHotWaterDayStart).ToList()); 
        PowerConsumptionHotWaterDayEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHotWaterDayEnd).ToList()); 
        PowerConsumptionHotWaterDayDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHotWaterDayDelta).ToList()); 
        PowerConsumptionHotWaterSumStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHotWaterSumStart).ToList()); 
        PowerConsumptionHotWaterSumEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHotWaterSumEnd).ToList()); 
        PowerConsumptionHotWaterSumDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.PowerConsumptionHotWaterSumDelta).ToList()); 
        RuntimeVaporizerHeatingStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.RuntimeVaporizerHeatingStart).ToList()); 
        RuntimeVaporizerHeatingEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.RuntimeVaporizerHeatingEnd).ToList()); 
        RuntimeVaporizerHeatingDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.RuntimeVaporizerHeatingDelta).ToList()); 
        RuntimeVaporizerHotWaterStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.RuntimeVaporizerHotWaterStart).ToList()); 
        RuntimeVaporizerHotWaterEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.RuntimeVaporizerHotWaterEnd).ToList()); 
        RuntimeVaporizerHotWaterDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.RuntimeVaporizerHotWaterDelta).ToList()); 
        RuntimeVaporizerDefrostStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.RuntimeVaporizerDefrostStart).ToList()); 
        RuntimeVaporizerDefrostEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.RuntimeVaporizerDefrostEnd).ToList()); 
        RuntimeVaporizerDefrostDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.RuntimeVaporizerDefrostDelta).ToList()); 
        ReheatingStages1StartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStages1Start).ToList()); 
        ReheatingStages1EndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStages1End).ToList()); 
        ReheatingStages1DeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStages1Delta).ToList()); 
        ReheatingStages2StartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStages2Start).ToList()); 
        ReheatingStages2EndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStages2End).ToList()); 
        ReheatingStages2DeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.ReheatingStages2Delta).ToList()); 
        DefrostTimeStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.DefrostTimeStart).ToList()); 
        DefrostTimeEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.DefrostTimeEnd).ToList()); 
        DefrostTimeDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.DefrostTimeDelta).ToList()); 
        DefrostStartsStartYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.DefrostStartsStart).ToList()); 
        DefrostStartsEndYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.DefrostStartsEnd).ToList()); 
        DefrostStartsDeltaYear = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Where(x => x.PeriodKind == "Year").Select(x => x.DefrostStartsDelta).ToList());
    }
}

<!-- Tab links -->
<div class="tab">
  <button class="tablinks" onclick="openTab(event, 'Days')">Letzte Tage</button>
  <button class="tablinks" onclick="openTab(event, 'Weeks')">Letzte Wochen</button>
  <button class="tablinks" onclick="openTab(event, 'Months')">Letzte Monate</button>
  <button class="tablinks" onclick="openTab(event, 'Years')">Letzte Jahre</button>
</div>

<!-- Tab content -->
<div id="Days" class="tabcontent">
  <h3>Tagesübersicht</h3>
    <!--Arbeitszahl-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PerformanceFactorDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--RÜCKLAUFTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReturnTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VORLAUFTEMPERATUR-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="InletTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <div class="chart-style">
        <div class="chart-container">
            <canvas id="AntiFreezeTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--AUSSENTEMPERATUR -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="OutdoorTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--FORTLUFTTEMPERATUR °C -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ExhaustAirTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERDAMPFERTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="EvaporatorTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--Gesamtverbrauch-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="TotalPowerConsumptionDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERDICHTEREINTRITTSTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="CompressorInletTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ZWISCHENEINSPRITZUNGSTEMP °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="IntermediateInjectionTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--HEISSGASTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="HotGasTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERFLÜSSIGERTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="CondenserTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ÖLSUMPFTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="OilSumpTemperatureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK NIEDERDRUCK bar-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="LowPressureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK MITTELDRUCK bar -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PressureMediumDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK HOCHDRUCK bar -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="HighPressureDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--WP WASSERVOLUMENSTROM l/min-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="WaterVolumeCurrentDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--SPANNUNG INVERTER V-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VoltageInverterDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ISTDREHZAHL VERDICHTER Hz-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ActualSpeedDensifierDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--SOLLDREHZAHL VERDICHTER Hz-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="SettingSpeedCompressedDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--LÜFTERLEISTUNG REL % -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="FanPowerRelDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHeatingDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN SUMME MWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHeatingTotalDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHotWaterDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh  -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHotWaterTotalDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ HEIZEN SUMME  MWh  -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStagesHeatQuantityHeatingSumDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ WARMWASSER SUMME  MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStagesHeatQuantityHotWaterTotalDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN TAG  KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHeatingDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHeatingSumDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHotWaterDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHotWaterSumDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerHeatingDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerHotWaterDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerDefrostDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ 1-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStages1Day" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ 2-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStages2Day" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ZEIT ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="DefrostTimeDay" class="canvas-style"></canvas>
        </div>
    </div>

    <!--STARTS ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="DefrostStartsDay" class="canvas-style"></canvas>
        </div>
    </div>
 </div>

<div id="Weeks" class="tabcontent">
  <h3>Wochenübersicht</h3>
      <!--Arbeitszahl-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PerformanceFactorWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--RÜCKLAUFTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReturnTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VORLAUFTEMPERATUR-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="InletTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <div class="chart-style">
        <div class="chart-container">
            <canvas id="AntiFreezeTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--AUSSENTEMPERATUR -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="OutdoorTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--FORTLUFTTEMPERATUR °C -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ExhaustAirTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERDAMPFERTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="EvaporatorTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--Gesamtverbrauch-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="TotalPowerConsumptionWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERDICHTEREINTRITTSTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="CompressorInletTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ZWISCHENEINSPRITZUNGSTEMP °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="IntermediateInjectionTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--HEISSGASTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="HotGasTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERFLÜSSIGERTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="CondenserTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ÖLSUMPFTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="OilSumpTemperatureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK NIEDERDRUCK bar-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="LowPressureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK MITTELDRUCK bar -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PressureMediumWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK HOCHDRUCK bar -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="HighPressureWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--WP WASSERVOLUMENSTROM l/min-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="WaterVolumeCurrentWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--SPANNUNG INVERTER V-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VoltageInverterWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ISTDREHZAHL VERDICHTER Hz-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ActualSpeedDensifierWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--SOLLDREHZAHL VERDICHTER Hz-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="SettingSpeedCompressedWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--LÜFTERLEISTUNG REL % -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="FanPowerRelWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHeatingWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN SUMME MWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHeatingTotalWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHotWaterWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh  -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHotWaterTotalWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ HEIZEN SUMME  MWh  -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStagesHeatQuantityHeatingSumWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ WARMWASSER SUMME  MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStagesHeatQuantityHotWaterTotalWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN TAG  KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHeatingWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHeatingSumWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHotWaterWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHotWaterSumWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerHeatingWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerHotWaterWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerDefrostWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ 1-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStages1Week" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ 2-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStages2Week" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ZEIT ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="DefrostTimeWeek" class="canvas-style"></canvas>
        </div>
    </div>

    <!--STARTS ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="DefrostStartsWeek" class="canvas-style"></canvas>
        </div>
    </div>
</div>

<div id="Months" class="tabcontent">
  <h3>Monatsübersicht</h3>
    <!--Arbeitszahl-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PerformanceFactorMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--RÜCKLAUFTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReturnTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VORLAUFTEMPERATUR-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="InletTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <div class="chart-style">
        <div class="chart-container">
            <canvas id="AntiFreezeTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--AUSSENTEMPERATUR -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="OutdoorTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--FORTLUFTTEMPERATUR °C -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ExhaustAirTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERDAMPFERTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="EvaporatorTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--Gesamtverbrauch-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="TotalPowerConsumptionMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERDICHTEREINTRITTSTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="CompressorInletTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ZWISCHENEINSPRITZUNGSTEMP °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="IntermediateInjectionTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--HEISSGASTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="HotGasTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERFLÜSSIGERTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="CondenserTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ÖLSUMPFTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="OilSumpTemperatureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK NIEDERDRUCK bar-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="LowPressureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK MITTELDRUCK bar -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PressureMediumMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK HOCHDRUCK bar -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="HighPressureMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--WP WASSERVOLUMENSTROM l/min-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="WaterVolumeCurrentMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--SPANNUNG INVERTER V-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VoltageInverterMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ISTDREHZAHL VERDICHTER Hz-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ActualSpeedDensifierMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--SOLLDREHZAHL VERDICHTER Hz-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="SettingSpeedCompressedMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--LÜFTERLEISTUNG REL % -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="FanPowerRelMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHeatingMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN SUMME MWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHeatingTotalMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHotWaterMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh  -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHotWaterTotalMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ HEIZEN SUMME  MWh  -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStagesHeatQuantityHeatingSumMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ WARMWASSER SUMME  MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStagesHeatQuantityHotWaterTotalMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN TAG  KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHeatingMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHeatingSumMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHotWaterMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHotWaterSumMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerHeatingMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerHotWaterMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerDefrostMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ 1-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStages1Month" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ 2-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStages2Month" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ZEIT ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="DefrostTimeMonth" class="canvas-style"></canvas>
        </div>
    </div>

    <!--STARTS ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="DefrostStartsMonth" class="canvas-style"></canvas>
        </div>
    </div>
</div>

<div id="Years" class="tabcontent">
  <h3>Jahresübersicht</h3>
    <!--Arbeitszahl-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PerformanceFactorYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--RÜCKLAUFTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReturnTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VORLAUFTEMPERATUR-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="InletTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <div class="chart-style">
        <div class="chart-container">
            <canvas id="AntiFreezeTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--AUSSENTEMPERATUR -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="OutdoorTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--FORTLUFTTEMPERATUR °C -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ExhaustAirTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERDAMPFERTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="EvaporatorTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--Gesamtverbrauch-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="TotalPowerConsumptionYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERDICHTEREINTRITTSTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="CompressorInletTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ZWISCHENEINSPRITZUNGSTEMP °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="IntermediateInjectionTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--HEISSGASTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="HotGasTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VERFLÜSSIGERTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="CondenserTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ÖLSUMPFTEMPERATUR °C-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="OilSumpTemperatureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK NIEDERDRUCK bar-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="LowPressureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK MITTELDRUCK bar -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PressureMediumYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--DRUCK HOCHDRUCK bar -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="HighPressureYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--WP WASSERVOLUMENSTROM l/min-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="WaterVolumeCurrentYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--SPANNUNG INVERTER V-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VoltageInverterYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ISTDREHZAHL VERDICHTER Hz-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ActualSpeedDensifierYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--SOLLDREHZAHL VERDICHTER Hz-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="SettingSpeedCompressedYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--LÜFTERLEISTUNG REL % -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="FanPowerRelYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHeatingYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN SUMME MWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHeatingTotalYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHotWaterYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh  -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="VaporizerHeatQuantityHotWaterTotalYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ HEIZEN SUMME  MWh  -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStagesHeatQuantityHeatingSumYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ WARMWASSER SUMME  MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStagesHeatQuantityHotWaterTotalYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN TAG  KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHeatingYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD HEIZEN SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHeatingSumYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER TAG KWh -->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHotWaterYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="PowerConsumptionHotWaterSumYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER SUMME MWh-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerHeatingYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD WARMWASSER-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerHotWaterYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--VD ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="RuntimeVaporizerDefrostYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ 1-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStages1Year" class="canvas-style"></canvas>
        </div>
    </div>

    <!--NHZ 2-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="ReheatingStages2Year" class="canvas-style"></canvas>
        </div>
    </div>

    <!--ZEIT ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="DefrostTimeYear" class="canvas-style"></canvas>
        </div>
    </div>

    <!--STARTS ABTAUEN-->
    <div class="chart-style">
        <div class="chart-container">
            <canvas id="DefrostStartsYear" class="canvas-style"></canvas>
        </div>
    </div>
</div>

<script>
  function openTab(evt, tabName) {
  // Declare all variables
  var i, tabcontent, tablinks;

  // Get all elements with class="tabcontent" and hide them
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }

  // Get all elements with class="tablinks" and remove the class "active"
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }

  // Show the current tab, and add an "active" class to the button that opened the tab
  document.getElementById(tabName).style.display = "block";
  evt.currentTarget.className += " active";
    if(tabName === "Days"){
        drawStartEndChart("PerformanceFactorDay",
            "Arbeitszahl (Tag)",
            @Html.Raw(XLabelsDay),
            @Html.Raw(PerformanceFactorStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(PerformanceFactorDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(PerformanceFactorEndDay), @Html.Raw(EndColorDay));

        drawMinMaxChart("ReturnTemperatureDay",
            "RÜCKLAUFTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(ReturnTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(ReturnTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(ReturnTemperatureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("InletTemperatureDay",
            "VORLAUFTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(InletTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(InletTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(InletTemperatureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("AntiFreezeTemperatureDay",
            "FROSTSCHUTZTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(AntiFreezeTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(AntiFreezeTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(AntiFreezeTemperatureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("OutdoorTemperatureDay",
            "AUSSENTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(OutdoorTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(OutdoorTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(OutdoorTemperatureMinDay), @Html.Raw(MinColorDay));


        drawMinMaxChart("ExhaustAirTemperatureDay",
            "FORTLUFTTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(ExhaustAirTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(ExhaustAirTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(ExhaustAirTemperatureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("EvaporatorTemperatureDay",
            "VERDAMPFERTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(EvaporatorTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(EvaporatorTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(EvaporatorTemperatureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("TotalPowerConsumptionDay",
            "VD HEIZEN SUMME MWh   ",
            @Html.Raw(XLabelsDay),
            @Html.Raw(TotalPowerConsumptionStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(TotalPowerConsumptionDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(TotalPowerConsumptionEndDay), @Html.Raw(EndColorDay));        

        drawMinMaxChart("CompressorInletTemperatureDay",
            "VERDICHTEREINTRITTSTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(CompressorInletTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(CompressorInletTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(CompressorInletTemperatureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("IntermediateInjectionTemperatureDay",
            "ZWISCHENEINSPRITZUNGSTEMP °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(IntermediateInjectionTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(IntermediateInjectionTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(IntermediateInjectionTemperatureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("HotGasTemperatureDay",
            "HEISSGASTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(HotGasTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(HotGasTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(HotGasTemperatureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("CondenserTemperatureDay",
            "VERFLÜSSIGERTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(CondenserTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(CondenserTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(CondenserTemperatureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("OilSumpTemperatureDay",
            "ÖLSUMPFTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(OilSumpTemperatureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(OilSumpTemperatureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(OilSumpTemperatureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("LowPressureDay",
            "DRUCK NIEDERDRUCK bar",
            @Html.Raw(XLabelsDay),
            @Html.Raw(LowPressureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(LowPressureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(LowPressureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("PressureMediumDay",
            "DRUCK MITTELDRUCK bar",
            @Html.Raw(XLabelsDay),
            @Html.Raw(PressureMediumMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(PressureMediumAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(PressureMediumMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("HighPressureDay",
            "DRUCK HOCHDRUCK bar",
            @Html.Raw(XLabelsDay),
            @Html.Raw(HighPressureMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(HighPressureAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(HighPressureMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("WaterVolumeCurrentDay",
            "WP WASSERVOLUMENSTROM l/min",
            @Html.Raw(XLabelsDay),
            @Html.Raw(WaterVolumeCurrentMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(WaterVolumeCurrentAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(WaterVolumeCurrentMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("VoltageInverterDay",
            "SPANNUNG INVERTER V",
            @Html.Raw(XLabelsDay),
            @Html.Raw(VoltageInverterMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(VoltageInverterAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(VoltageInverterMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("ActualSpeedDensifierDay",
            "ISTDREHZAHL VERDICHTER Hz",
            @Html.Raw(XLabelsDay),
            @Html.Raw(ActualSpeedDensifierMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(ActualSpeedDensifierAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(ActualSpeedDensifierMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("SettingSpeedCompressedDay",
            "SOLLDREHZAHL VERDICHTER Hz",
            @Html.Raw(XLabelsDay),
            @Html.Raw(SettingSpeedCompressedMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(SettingSpeedCompressedAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(SettingSpeedCompressedMinDay), @Html.Raw(MinColorDay));

        drawMinMaxChart("FanPowerRelDay",
            "LÜFTERLEISTUNG REL %",
            @Html.Raw(XLabelsDay),
            @Html.Raw(FanPowerRelMaxDay), @Html.Raw(MaxColorDay),
            @Html.Raw(FanPowerRelAverageDay), @Html.Raw(AverageColorDay),
            @Html.Raw(FanPowerRelMinDay), @Html.Raw(MinColorDay));

        drawStartEndChart("VaporizerHeatQuantityHeatingDay",
            "VD HEIZEN TAG KWh",
            @Html.Raw(XLabelsDay),
            @Html.Raw(VaporizerHeatQuantityHeatingDayStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(VaporizerHeatQuantityHeatingDayDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(VaporizerHeatQuantityHeatingDayEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("VaporizerHeatQuantityHeatingTotalDay",
            "VD HEIZEN SUMME MWh",
            @Html.Raw(XLabelsDay),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("VaporizerHeatQuantityHotWaterDay",
            "VD WARMWASSER TAG KWh",
            @Html.Raw(XLabelsDay),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("VaporizerHeatQuantityHotWaterTotalDay",
            "VD WARMWASSER SUMME MWh",
            @Html.Raw(XLabelsDay),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("ReheatingStagesHeatQuantityHeatingSumDay",
            "NHZ HEIZEN SUMME  MWh",
            @Html.Raw(XLabelsDay),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("ReheatingStagesHeatQuantityHotWaterTotalDay",
            "NHZ WARMWASSER SUMME  MWh",
            @Html.Raw(XLabelsDay),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("PowerConsumptionHeatingDay",
            "VD HEIZEN TAG  KWh",
            @Html.Raw(XLabelsDay),
            @Html.Raw(PowerConsumptionHeatingDayStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(PowerConsumptionHeatingDayDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(PowerConsumptionHeatingDayEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("PowerConsumptionHeatingSumDay",
            "VD HEIZEN SUMME MWh",
            @Html.Raw(XLabelsDay),
            @Html.Raw(PowerConsumptionHeatingSumStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(PowerConsumptionHeatingSumDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(PowerConsumptionHeatingSumEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("PowerConsumptionHotWaterDay",
            "VD WARMWASSER TAG KWh",
            @Html.Raw(XLabelsDay),
            @Html.Raw(PowerConsumptionHotWaterDayStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(PowerConsumptionHotWaterDayDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(PowerConsumptionHotWaterDayEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("PowerConsumptionHotWaterSumDay",
            "VD WARMWASSER SUMME MWh",
            @Html.Raw(XLabelsDay),
            @Html.Raw(PowerConsumptionHotWaterSumStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(PowerConsumptionHotWaterSumDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(PowerConsumptionHotWaterSumEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("RuntimeVaporizerHeatingDay",
            "VD HEIZEN",
            @Html.Raw(XLabelsDay),
            @Html.Raw(RuntimeVaporizerHeatingStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(RuntimeVaporizerHeatingDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(RuntimeVaporizerHeatingEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("RuntimeVaporizerHotWaterDay",
            "VD WARMWASSER",
            @Html.Raw(XLabelsDay),
            @Html.Raw(RuntimeVaporizerHotWaterStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(RuntimeVaporizerHotWaterDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(RuntimeVaporizerHotWaterEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("RuntimeVaporizerDefrostDay",
            "VD ABTAUEN",
            @Html.Raw(XLabelsDay),
            @Html.Raw(RuntimeVaporizerDefrostStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(RuntimeVaporizerDefrostDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(RuntimeVaporizerDefrostEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("ReheatingStages1Day",
            "NHZ 1",
            @Html.Raw(XLabelsDay),
            @Html.Raw(ReheatingStages1StartDay), @Html.Raw(StartColorDay),
            @Html.Raw(ReheatingStages1DeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(ReheatingStages1EndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("ReheatingStages2Day",
            "NHZ 2",
            @Html.Raw(XLabelsDay),
            @Html.Raw(ReheatingStages2StartDay), @Html.Raw(StartColorDay),
            @Html.Raw(ReheatingStages2DeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(ReheatingStages2EndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("DefrostTimeDay",
            "ZEIT ABTAUEN",
            @Html.Raw(XLabelsDay),
            @Html.Raw(DefrostTimeStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(DefrostTimeDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(DefrostTimeEndDay), @Html.Raw(EndColorDay));

        drawStartEndChart("DefrostStartsDay",
            "STARTS ABTAUEN",
            @Html.Raw(XLabelsDay),
            @Html.Raw(DefrostStartsStartDay), @Html.Raw(StartColorDay),
            @Html.Raw(DefrostStartsDeltaDay), @Html.Raw(DeltaColorDay),
            @Html.Raw(DefrostStartsEndDay), @Html.Raw(EndColorDay));

            drawStartEndChart("PerformanceFactorWeek",
            "Arbeitszahl (Tag)",
            @Html.Raw(XLabelsDay),
            @Html.Raw(PerformanceFactorStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(PerformanceFactorDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(PerformanceFactorEndWeek), @Html.Raw(EndColorWeek));

        drawMinMaxChart("ReturnTemperatureWeek",
            "RÜCKLAUFTEMPERATUR °C",
            @Html.Raw(XLabelsDay),
            @Html.Raw(ReturnTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(ReturnTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(ReturnTemperatureMinWeek), @Html.Raw(MinColorWeek));
    }

    if(tabName === "Weeks"){
        drawStartEndChart("PerformanceFactorWeek",
            "Arbeitszahl (Wochen)",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(PerformanceFactorStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(PerformanceFactorDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(PerformanceFactorEndWeek), @Html.Raw(EndColorWeek));

        drawMinMaxChart("InletTemperatureWeek",
            "VORLAUFTEMPERATUR °C",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(InletTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(InletTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(InletTemperatureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("AntiFreezeTemperatureWeek",
            "FROSTSCHUTZTEMPERATUR °C",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(AntiFreezeTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(AntiFreezeTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(AntiFreezeTemperatureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("OutdoorTemperatureWeek",
            "AUSSENTEMPERATUR °C",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(OutdoorTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(OutdoorTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(OutdoorTemperatureMinWeek), @Html.Raw(MinColorWeek));


        drawMinMaxChart("ExhaustAirTemperatureWeek",
            "FORTLUFTTEMPERATUR °C",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(ExhaustAirTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(ExhaustAirTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(ExhaustAirTemperatureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("EvaporatorTemperatureWeek",
            "VERDAMPFERTEMPERATUR °C",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(EvaporatorTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(EvaporatorTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(EvaporatorTemperatureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("TotalPowerConsumptionWeek",
            "VD HEIZEN SUMME MWh   ",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(TotalPowerConsumptionStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(TotalPowerConsumptionDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(TotalPowerConsumptionEndWeek), @Html.Raw(EndColorWeek));        

        drawMinMaxChart("CompressorInletTemperatureWeek",
            "VERDICHTEREINTRITTSTEMPERATUR °C",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(CompressorInletTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(CompressorInletTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(CompressorInletTemperatureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("IntermediateInjectionTemperatureWeek",
            "ZWISCHENEINSPRITZUNGSTEMP °C",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(IntermediateInjectionTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(IntermediateInjectionTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(IntermediateInjectionTemperatureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("HotGasTemperatureWeek",
            "HEISSGASTEMPERATUR °C",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(HotGasTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(HotGasTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(HotGasTemperatureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("CondenserTemperatureWeek",
            "VERFLÜSSIGERTEMPERATUR °C",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(CondenserTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(CondenserTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(CondenserTemperatureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("OilSumpTemperatureWeek",
            "ÖLSUMPFTEMPERATUR °C",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(OilSumpTemperatureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(OilSumpTemperatureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(OilSumpTemperatureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("LowPressureWeek",
            "DRUCK NIEDERDRUCK bar",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(LowPressureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(LowPressureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(LowPressureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("PressureMediumWeek",
            "DRUCK MITTELDRUCK bar",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(PressureMediumMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(PressureMediumAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(PressureMediumMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("HighPressureWeek",
            "DRUCK HOCHDRUCK bar",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(HighPressureMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(HighPressureAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(HighPressureMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("WaterVolumeCurrentWeek",
            "WP WASSERVOLUMENSTROM l/min",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(WaterVolumeCurrentMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(WaterVolumeCurrentAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(WaterVolumeCurrentMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("VoltageInverterWeek",
            "SPANNUNG INVERTER V",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(VoltageInverterMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(VoltageInverterAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(VoltageInverterMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("ActualSpeedDensifierWeek",
            "ISTDREHZAHL VERDICHTER Hz",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(ActualSpeedDensifierMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(ActualSpeedDensifierAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(ActualSpeedDensifierMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("SettingSpeedCompressedWeek",
            "SOLLDREHZAHL VERDICHTER Hz",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(SettingSpeedCompressedMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(SettingSpeedCompressedAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(SettingSpeedCompressedMinWeek), @Html.Raw(MinColorWeek));

        drawMinMaxChart("FanPowerRelWeek",
            "LÜFTERLEISTUNG REL %",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(FanPowerRelMaxWeek), @Html.Raw(MaxColorWeek),
            @Html.Raw(FanPowerRelAverageWeek), @Html.Raw(AverageColorWeek),
            @Html.Raw(FanPowerRelMinWeek), @Html.Raw(MinColorWeek));

        drawStartEndChart("VaporizerHeatQuantityHeatingWeek",
            "VD HEIZEN TAG KWh",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(VaporizerHeatQuantityHeatingDayStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(VaporizerHeatQuantityHeatingDayDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(VaporizerHeatQuantityHeatingDayEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("VaporizerHeatQuantityHeatingTotalWeek",
            "VD HEIZEN SUMME MWh",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("VaporizerHeatQuantityHotWaterWeek",
            "VD WARMWASSER TAG KWh",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("VaporizerHeatQuantityHotWaterTotalWeek",
            "VD WARMWASSER SUMME MWh",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("ReheatingStagesHeatQuantityHeatingSumWeek",
            "NHZ HEIZEN SUMME  MWh",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("ReheatingStagesHeatQuantityHotWaterTotalWeek",
            "NHZ WARMWASSER SUMME  MWh",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("PowerConsumptionHeatingWeek",
            "VD HEIZEN TAG  KWh",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(PowerConsumptionHeatingDayStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(PowerConsumptionHeatingDayDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(PowerConsumptionHeatingDayEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("PowerConsumptionHeatingSumWeek",
            "VD HEIZEN SUMME MWh",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(PowerConsumptionHeatingSumStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(PowerConsumptionHeatingSumDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(PowerConsumptionHeatingSumEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("PowerConsumptionHotWaterWeek",
            "VD WARMWASSER TAG KWh",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(PowerConsumptionHotWaterDayStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(PowerConsumptionHotWaterDayDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(PowerConsumptionHotWaterDayEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("PowerConsumptionHotWaterSumWeek",
            "VD WARMWASSER SUMME MWh",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(PowerConsumptionHotWaterSumStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(PowerConsumptionHotWaterSumDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(PowerConsumptionHotWaterSumEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("RuntimeVaporizerHeatingWeek",
            "VD HEIZEN",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(RuntimeVaporizerHeatingStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(RuntimeVaporizerHeatingDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(RuntimeVaporizerHeatingEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("RuntimeVaporizerHotWaterWeek",
            "VD WARMWASSER",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(RuntimeVaporizerHotWaterStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(RuntimeVaporizerHotWaterDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(RuntimeVaporizerHotWaterEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("RuntimeVaporizerDefrostWeek",
            "VD ABTAUEN",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(RuntimeVaporizerDefrostStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(RuntimeVaporizerDefrostDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(RuntimeVaporizerDefrostEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("ReheatingStages1Week",
            "NHZ 1",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(ReheatingStages1StartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(ReheatingStages1DeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(ReheatingStages1EndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("ReheatingStages2Week",
            "NHZ 2",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(ReheatingStages2StartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(ReheatingStages2DeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(ReheatingStages2EndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("DefrostTimeWeek",
            "ZEIT ABTAUEN",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(DefrostTimeStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(DefrostTimeDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(DefrostTimeEndWeek), @Html.Raw(EndColorWeek));

        drawStartEndChart("DefrostStartsWeek",
            "STARTS ABTAUEN",
            @Html.Raw(XLabelsWeek),
            @Html.Raw(DefrostStartsStartWeek), @Html.Raw(StartColorWeek),
            @Html.Raw(DefrostStartsDeltaWeek), @Html.Raw(DeltaColorWeek),
            @Html.Raw(DefrostStartsEndWeek), @Html.Raw(EndColorWeek));
    }

    if(tabName === "Months"){
        drawStartEndChart("PerformanceFactorMonth",
            "Arbeitszahl (Tag)",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(PerformanceFactorStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(PerformanceFactorDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(PerformanceFactorEndMonth), @Html.Raw(EndColorMonth));

        drawMinMaxChart("ReturnTemperatureMonth",
            "RÜCKLAUFTEMPERATUR °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(ReturnTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(ReturnTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(ReturnTemperatureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("InletTemperatureMonth",
            "VORLAUFTEMPERATUR °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(InletTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(InletTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(InletTemperatureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("AntiFreezeTemperatureMonth",
            "FROSTSCHUTZTEMPERATUR °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(AntiFreezeTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(AntiFreezeTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(AntiFreezeTemperatureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("OutdoorTemperatureMonth",
            "AUSSENTEMPERATUR °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(OutdoorTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(OutdoorTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(OutdoorTemperatureMinMonth), @Html.Raw(MinColorMonth));


        drawMinMaxChart("ExhaustAirTemperatureMonth",
            "FORTLUFTTEMPERATUR °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(ExhaustAirTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(ExhaustAirTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(ExhaustAirTemperatureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("EvaporatorTemperatureMonth",
            "VERDAMPFERTEMPERATUR °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(EvaporatorTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(EvaporatorTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(EvaporatorTemperatureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("TotalPowerConsumptionMonth",
            "VD HEIZEN SUMME MWh   ",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(TotalPowerConsumptionStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(TotalPowerConsumptionDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(TotalPowerConsumptionEndMonth), @Html.Raw(EndColorMonth));        

        drawMinMaxChart("CompressorInletTemperatureMonth",
            "VERDICHTEREINTRITTSTEMPERATUR °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(CompressorInletTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(CompressorInletTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(CompressorInletTemperatureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("IntermediateInjectionTemperatureMonth",
            "ZWISCHENEINSPRITZUNGSTEMP °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(IntermediateInjectionTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(IntermediateInjectionTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(IntermediateInjectionTemperatureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("HotGasTemperatureMonth",
            "HEISSGASTEMPERATUR °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(HotGasTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(HotGasTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(HotGasTemperatureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("CondenserTemperatureMonth",
            "VERFLÜSSIGERTEMPERATUR °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(CondenserTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(CondenserTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(CondenserTemperatureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("OilSumpTemperatureMonth",
            "ÖLSUMPFTEMPERATUR °C",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(OilSumpTemperatureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(OilSumpTemperatureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(OilSumpTemperatureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("LowPressureMonth",
            "DRUCK NIEDERDRUCK bar",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(LowPressureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(LowPressureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(LowPressureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("PressureMediumMonth",
            "DRUCK MITTELDRUCK bar",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(PressureMediumMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(PressureMediumAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(PressureMediumMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("HighPressureMonth",
            "DRUCK HOCHDRUCK bar",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(HighPressureMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(HighPressureAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(HighPressureMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("WaterVolumeCurrentMonth",
            "WP WASSERVOLUMENSTROM l/min",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(WaterVolumeCurrentMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(WaterVolumeCurrentAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(WaterVolumeCurrentMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("VoltageInverterMonth",
            "SPANNUNG INVERTER V",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(VoltageInverterMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(VoltageInverterAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(VoltageInverterMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("ActualSpeedDensifierMonth",
            "ISTDREHZAHL VERDICHTER Hz",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(ActualSpeedDensifierMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(ActualSpeedDensifierAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(ActualSpeedDensifierMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("SettingSpeedCompressedMonth",
            "SOLLDREHZAHL VERDICHTER Hz",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(SettingSpeedCompressedMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(SettingSpeedCompressedAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(SettingSpeedCompressedMinMonth), @Html.Raw(MinColorMonth));

        drawMinMaxChart("FanPowerRelMonth",
            "LÜFTERLEISTUNG REL %",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(FanPowerRelMaxMonth), @Html.Raw(MaxColorMonth),
            @Html.Raw(FanPowerRelAverageMonth), @Html.Raw(AverageColorMonth),
            @Html.Raw(FanPowerRelMinMonth), @Html.Raw(MinColorMonth));

        drawStartEndChart("VaporizerHeatQuantityHeatingMonth",
            "VD HEIZEN TAG KWh",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(VaporizerHeatQuantityHeatingDayStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(VaporizerHeatQuantityHeatingDayDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(VaporizerHeatQuantityHeatingDayEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("VaporizerHeatQuantityHeatingTotalMonth",
            "VD HEIZEN SUMME MWh",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("VaporizerHeatQuantityHotWaterMonth",
            "VD WARMWASSER TAG KWh",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("VaporizerHeatQuantityHotWaterTotalMonth",
            "VD WARMWASSER SUMME MWh",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("ReheatingStagesHeatQuantityHeatingSumMonth",
            "NHZ HEIZEN SUMME  MWh",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("ReheatingStagesHeatQuantityHotWaterTotalMonth",
            "NHZ WARMWASSER SUMME  MWh",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("PowerConsumptionHeatingMonth",
            "VD HEIZEN TAG  KWh",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(PowerConsumptionHeatingDayStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(PowerConsumptionHeatingDayDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(PowerConsumptionHeatingDayEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("PowerConsumptionHeatingSumMonth",
            "VD HEIZEN SUMME MWh",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(PowerConsumptionHeatingSumStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(PowerConsumptionHeatingSumDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(PowerConsumptionHeatingSumEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("PowerConsumptionHotWaterMonth",
            "VD WARMWASSER TAG KWh",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(PowerConsumptionHotWaterDayStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(PowerConsumptionHotWaterDayDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(PowerConsumptionHotWaterDayEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("PowerConsumptionHotWaterSumMonth",
            "VD WARMWASSER SUMME MWh",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(PowerConsumptionHotWaterSumStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(PowerConsumptionHotWaterSumDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(PowerConsumptionHotWaterSumEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("RuntimeVaporizerHeatingMonth",
            "VD HEIZEN",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(RuntimeVaporizerHeatingStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(RuntimeVaporizerHeatingDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(RuntimeVaporizerHeatingEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("RuntimeVaporizerHotWaterMonth",
            "VD WARMWASSER",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(RuntimeVaporizerHotWaterStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(RuntimeVaporizerHotWaterDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(RuntimeVaporizerHotWaterEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("RuntimeVaporizerDefrostMonth",
            "VD ABTAUEN",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(RuntimeVaporizerDefrostStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(RuntimeVaporizerDefrostDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(RuntimeVaporizerDefrostEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("ReheatingStages1Month",
            "NHZ 1",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(ReheatingStages1StartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(ReheatingStages1DeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(ReheatingStages1EndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("ReheatingStages2Month",
            "NHZ 2",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(ReheatingStages2StartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(ReheatingStages2DeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(ReheatingStages2EndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("DefrostTimeMonth",
            "ZEIT ABTAUEN",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(DefrostTimeStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(DefrostTimeDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(DefrostTimeEndMonth), @Html.Raw(EndColorMonth));

        drawStartEndChart("DefrostStartsMonth",
            "STARTS ABTAUEN",
            @Html.Raw(XLabelsMonth),
            @Html.Raw(DefrostStartsStartMonth), @Html.Raw(StartColorMonth),
            @Html.Raw(DefrostStartsDeltaMonth), @Html.Raw(DeltaColorMonth),
            @Html.Raw(DefrostStartsEndMonth), @Html.Raw(EndColorMonth));
    }

    if(tabName === "Years"){
        drawStartEndChart("PerformanceFactorYear",
            "Arbeitszahl (Tag)",
            @Html.Raw(XLabelsYear),
            @Html.Raw(PerformanceFactorStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(PerformanceFactorDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(PerformanceFactorEndYear), @Html.Raw(EndColorYear));

        drawMinMaxChart("ReturnTemperatureYear",
            "RÜCKLAUFTEMPERATUR °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(ReturnTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(ReturnTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(ReturnTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("InletTemperatureYear",
            "VORLAUFTEMPERATUR °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(InletTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(InletTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(InletTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("AntiFreezeTemperatureYear",
            "FROSTSCHUTZTEMPERATUR °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(AntiFreezeTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(AntiFreezeTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(AntiFreezeTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("OutdoorTemperatureYear",
            "AUSSENTEMPERATUR °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(OutdoorTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(OutdoorTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(OutdoorTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("ExhaustAirTemperatureYear",
            "FORTLUFTTEMPERATUR °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(ExhaustAirTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(ExhaustAirTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(ExhaustAirTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("EvaporatorTemperatureYear",
            "VERDAMPFERTEMPERATUR °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(EvaporatorTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(EvaporatorTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(EvaporatorTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("TotalPowerConsumptionYear",
            "VD HEIZEN SUMME MWh   ",
            @Html.Raw(XLabelsYear),
            @Html.Raw(TotalPowerConsumptionStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(TotalPowerConsumptionDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(TotalPowerConsumptionEndYear), @Html.Raw(EndColorYear));        

        drawMinMaxChart("CompressorInletTemperatureYear",
            "VERDICHTEREINTRITTSTEMPERATUR °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(CompressorInletTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(CompressorInletTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(CompressorInletTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("IntermediateInjectionTemperatureYear",
            "ZWISCHENEINSPRITZUNGSTEMP °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(IntermediateInjectionTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(IntermediateInjectionTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(IntermediateInjectionTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("HotGasTemperatureYear",
            "HEISSGASTEMPERATUR °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(HotGasTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(HotGasTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(HotGasTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("CondenserTemperatureYear",
            "VERFLÜSSIGERTEMPERATUR °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(CondenserTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(CondenserTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(CondenserTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("OilSumpTemperatureYear",
            "ÖLSUMPFTEMPERATUR °C",
            @Html.Raw(XLabelsYear),
            @Html.Raw(OilSumpTemperatureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(OilSumpTemperatureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(OilSumpTemperatureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("LowPressureYear",
            "DRUCK NIEDERDRUCK bar",
            @Html.Raw(XLabelsYear),
            @Html.Raw(LowPressureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(LowPressureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(LowPressureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("PressureMediumYear",
            "DRUCK MITTELDRUCK bar",
            @Html.Raw(XLabelsYear),
            @Html.Raw(PressureMediumMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(PressureMediumAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(PressureMediumMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("HighPressureYear",
            "DRUCK HOCHDRUCK bar",
            @Html.Raw(XLabelsYear),
            @Html.Raw(HighPressureMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(HighPressureAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(HighPressureMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("WaterVolumeCurrentYear",
            "WP WASSERVOLUMENSTROM l/min",
            @Html.Raw(XLabelsYear),
            @Html.Raw(WaterVolumeCurrentMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(WaterVolumeCurrentAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(WaterVolumeCurrentMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("VoltageInverterYear",
            "SPANNUNG INVERTER V",
            @Html.Raw(XLabelsYear),
            @Html.Raw(VoltageInverterMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(VoltageInverterAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(VoltageInverterMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("ActualSpeedDensifierYear",
            "ISTDREHZAHL VERDICHTER Hz",
            @Html.Raw(XLabelsYear),
            @Html.Raw(ActualSpeedDensifierMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(ActualSpeedDensifierAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(ActualSpeedDensifierMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("SettingSpeedCompressedYear",
            "SOLLDREHZAHL VERDICHTER Hz",
            @Html.Raw(XLabelsYear),
            @Html.Raw(SettingSpeedCompressedMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(SettingSpeedCompressedAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(SettingSpeedCompressedMinYear), @Html.Raw(MinColorYear));

        drawMinMaxChart("FanPowerRelYear",
            "LÜFTERLEISTUNG REL %",
            @Html.Raw(XLabelsYear),
            @Html.Raw(FanPowerRelMaxYear), @Html.Raw(MaxColorYear),
            @Html.Raw(FanPowerRelAverageYear), @Html.Raw(AverageColorYear),
            @Html.Raw(FanPowerRelMinYear), @Html.Raw(MinColorYear));

        drawStartEndChart("VaporizerHeatQuantityHeatingYear",
            "VD HEIZEN TAG KWh",
            @Html.Raw(XLabelsYear),
            @Html.Raw(VaporizerHeatQuantityHeatingDayStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(VaporizerHeatQuantityHeatingDayDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(VaporizerHeatQuantityHeatingDayEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("VaporizerHeatQuantityHeatingTotalYear",
            "VD HEIZEN SUMME MWh",
            @Html.Raw(XLabelsYear),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(VaporizerHeatQuantityHeatingTotalEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("VaporizerHeatQuantityHotWaterYear",
            "VD WARMWASSER TAG KWh",
            @Html.Raw(XLabelsYear),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(VaporizerHeatQuantityHotWaterDayEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("VaporizerHeatQuantityHotWaterTotalYear",
            "VD WARMWASSER SUMME MWh",
            @Html.Raw(XLabelsYear),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(VaporizerHeatQuantityHotWaterTotalEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("ReheatingStagesHeatQuantityHeatingSumYear",
            "NHZ HEIZEN SUMME  MWh",
            @Html.Raw(XLabelsYear),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(ReheatingStagesHeatQuantityHeatingSumEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("ReheatingStagesHeatQuantityHotWaterTotalYear",
            "NHZ WARMWASSER SUMME  MWh",
            @Html.Raw(XLabelsYear),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(ReheatingStagesHeatQuantityHotWaterTotalEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("PowerConsumptionHeatingYear",
            "VD HEIZEN TAG  KWh",
            @Html.Raw(XLabelsYear),
            @Html.Raw(PowerConsumptionHeatingDayStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(PowerConsumptionHeatingDayDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(PowerConsumptionHeatingDayEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("PowerConsumptionHeatingSumYear",
            "VD HEIZEN SUMME MWh",
            @Html.Raw(XLabelsYear),
            @Html.Raw(PowerConsumptionHeatingSumStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(PowerConsumptionHeatingSumDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(PowerConsumptionHeatingSumEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("PowerConsumptionHotWaterYear",
            "VD WARMWASSER TAG KWh",
            @Html.Raw(XLabelsYear),
            @Html.Raw(PowerConsumptionHotWaterDayStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(PowerConsumptionHotWaterDayDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(PowerConsumptionHotWaterDayEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("PowerConsumptionHotWaterSumYear",
            "VD WARMWASSER SUMME MWh",
            @Html.Raw(XLabelsYear),
            @Html.Raw(PowerConsumptionHotWaterSumStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(PowerConsumptionHotWaterSumDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(PowerConsumptionHotWaterSumEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("RuntimeVaporizerHeatingYear",
            "VD HEIZEN",
            @Html.Raw(XLabelsYear),
            @Html.Raw(RuntimeVaporizerHeatingStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(RuntimeVaporizerHeatingDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(RuntimeVaporizerHeatingEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("RuntimeVaporizerHotWaterYear",
            "VD WARMWASSER",
            @Html.Raw(XLabelsYear),
            @Html.Raw(RuntimeVaporizerHotWaterStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(RuntimeVaporizerHotWaterDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(RuntimeVaporizerHotWaterEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("RuntimeVaporizerDefrostYear",
            "VD ABTAUEN",
            @Html.Raw(XLabelsYear),
            @Html.Raw(RuntimeVaporizerDefrostStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(RuntimeVaporizerDefrostDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(RuntimeVaporizerDefrostEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("ReheatingStages1Year",
            "NHZ 1",
            @Html.Raw(XLabelsYear),
            @Html.Raw(ReheatingStages1StartYear), @Html.Raw(StartColorYear),
            @Html.Raw(ReheatingStages1DeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(ReheatingStages1EndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("ReheatingStages2Year",
            "NHZ 2",
            @Html.Raw(XLabelsYear),
            @Html.Raw(ReheatingStages2StartYear), @Html.Raw(StartColorYear),
            @Html.Raw(ReheatingStages2DeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(ReheatingStages2EndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("DefrostTimeYear",
            "ZEIT ABTAUEN",
            @Html.Raw(XLabelsYear),
            @Html.Raw(DefrostTimeStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(DefrostTimeDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(DefrostTimeEndYear), @Html.Raw(EndColorYear));

        drawStartEndChart("DefrostStartsYear",
            "STARTS ABTAUEN",
            @Html.Raw(XLabelsYear),
            @Html.Raw(DefrostStartsStartYear), @Html.Raw(StartColorYear),
            @Html.Raw(DefrostStartsDeltaYear), @Html.Raw(DeltaColorYear),
            @Html.Raw(DefrostStartsEndYear), @Html.Raw(EndColorYear)); 
    }
}
</script>
<script src="//ajax.aspnetcdn.com/ajax/jquery/jquery-2.1.4.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"
    integrity="sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd"
    crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="js/site.js" asp-append-version="true"></script>
