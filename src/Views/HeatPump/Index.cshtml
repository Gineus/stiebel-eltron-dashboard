@model List<HeatPumpDataPerPeriod>
@{
    ViewData["Title"] = "Heat Pump";
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => new DateTime((int)x.Year, 1, 1).Add(TimeSpan.FromDays(x.PeriodNumber))).ToList());
    var MaxOutDoorTemp = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.OutdoorTemperatureMax).ToList());
    var MaxOutDoorTempColor = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.OutdoorTemperatureMax).Select(c => "rgba(233, 241, 221, 1)").ToList());
    var MinOutDoorTemp = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.OutdoorTemperatureMin).ToList());
    var MinOutDoorTempColor = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.OutdoorTemperatureMax).Select(c => "rgba(140, 173, 88, 1)").ToList());
    var AvgOutDoorTemp = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.OutdoorTemperatureAverage).ToList());
    var AvgOutDoorTempColor = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.OutdoorTemperatureMax).Select(c => "rgba(132, 133, 135, 1)").ToList());
}
<!DOCTYPE html>

<html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Line</title>
</head>

<body>
    <meta http-equiv="refresh" content="60">
    <div class="box-body">

        <div class="chart-container">
            <canvas id="chart" style="width:100%; height:500px"></canvas>
        </div>
    </div>
</body>

</html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">
    $(function () {
        var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
			var data = {
            labels: @Html.Raw(XLabels),
            datasets: [{
                label: "Max. Außentemp. °C",
                borderWidth: 1,
                data: @Html.Raw(MaxOutDoorTemp),
                fill: false,
                borderColor: 'rgba(233, 241, 221, 1)',
                backgroundColor: @Html.Raw(MaxOutDoorTempColor),
            },{
                label: "Min. Außentemp. °C",
                borderWidth: 1,
                data: @Html.Raw(MinOutDoorTemp),
                fill: false,
                borderColor: 'rgba(140, 173, 88, 1)',
                backgroundColor:  @Html.Raw(MinOutDoorTempColor),
            },{
                label: "Durchschn. Außentemp. °C",
                borderWidth: 1,
                data: @Html.Raw(AvgOutDoorTemp), 
                fill: false,
                borderColor: 'rgba(132, 133, 135, 1)',
                backgroundColor: @Html.Raw(AvgOutDoorTempColor),
            }]
        };

        var options = {
            maintainAspectRatio: false,
            scales: {
                yAxes: [{
                    ticks: {
                        min: 0,
                        beginAtZero: false
                    },
                    gridLines: {
                        display: true,
                        color: "rgba(rgba(236, 243, 225, 1))"
                    }
                }],
                xAxes: [{
                    type: 'time',
                    time: {
                        parser: 'YYYY-MM-DD HH:mm:ss',
                        unit: 'day'
                    },
                    ticks: {
                        min: 0,
                        beginAtZero: false
                    },
                    gridLines: {
                        display: false
                    }
                }]
            }
        };

        var myChart = new Chart(ctx, {
            options: options,
            data: data,
            type: 'line'

        });
    });
</script>